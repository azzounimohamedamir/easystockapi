parameters:
  buildConfiguration: 'Release'

jobs:
  - job: Tests_on_Wind
    steps:
    - task: UseDotNet@2
      inputs:
        version: '3.1.x'
      displayName: 'Use dotnet core 3.1.x'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*Tests/*.csproj'
      displayName: 'dotnet restore ${{ parameters.buildConfiguration }}'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: |
            **/*Tests/*.csproj
#            !**/*Application.IntegrationTests/*.csproj
        arguments: '--configuration ${{ parameters.buildConfiguration }}'
      displayName: 'dotnet build ${{ parameters.buildConfiguration }}'

    - task: DotNetCoreCLI@2
      inputs:
        command: test
        projects: |
           **/*Tests/*.csproj
#           !**/*Application.IntegrationTests/*.csproj
        arguments: '--configuration ${{ parameters.buildConfiguration }} --collect "XPlat Code Coverage"'
      displayName: 'dotnet tests ${{ parameters.buildConfiguration }}'

    - script: 'dotnet tool install --global dotnet-reportgenerator-globaltool'  
      displayName: 'Install ReportGenerator tool'  

    - script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'  
      displayName: 'Create reports' 
 
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'  
      displayName: 'Publish code coverage report'


#    - task: VSTest@2
#      inputs:
#        testSelector: 'testAssemblies' # Options: testAssemblies, testPlan, testRun
#        testAssemblyVer2: | # Required when testSelector == TestAssemblies
#          **\*Tests.dll
#          !**\xunit.runner.visualstudio.testadapter.dll
#          !**\xunit.runner.visualstudio.dotnetcore.testadapter.dll
#          !**\*[Tt]estAdapter*.dll
#          !**\obj\**
#        searchFolder: 'tests/unit-testing-using-dotnet-test/PrimeService.Tests'
#        configuration: '${{ parameters.buildConfiguration }}'
#        platform: '$(buildPlatform)'
#        testRunTitle: $(Agent.JobName)
#        otherConsoleOptions: '/Platform:x64 /Framework:.NETCoreApp,Version=v2.2'
#        codeCoverageEnabled: true
#        publishRunAttachments: true
#      displayName: 'dotnet tests ${{ parameters.buildConfiguration }}'
      
