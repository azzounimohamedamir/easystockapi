// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartRestaurant.Infrastructure.Persistence;

namespace SmartRestaurant.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250224140427_updateFid")]
    partial class updateFid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.AbcProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BonCommandeFournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pua")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("SelectedStockId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BonCommandeFournisseurId");

                    b.HasIndex("SelectedStockId");

                    b.ToTable("AbcProducts");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.AjoutProductsAvoir", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FactureAvoirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Puv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FactureAvoirId");

                    b.ToTable("AjoutProductsAvoirs");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.AttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductAttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ProductAttributeId");

                    b.ToTable("AttributeValues");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.AvanceClients", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAvance")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontantAvance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("AvanceClients");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BAProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BAId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BonAchatsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Newpua")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pmp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pua")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("SelectedStockId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BonAchatsId");

                    b.HasIndex("SelectedStockId");

                    b.ToTable("BAProducts");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BcProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BcId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Puv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("SelectedStockId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BcId");

                    b.HasIndex("SelectedStockId");

                    b.ToTable("BcProducts");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Bl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Caisse")
                        .HasColumnType("int");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeBl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conducteur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CouponPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFermuture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FactureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Heure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LieuLivraison")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatriculeVeh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantTotalHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalHTApresRemise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomCaissier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomVehicule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Remise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RestTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Rib")
                        .HasColumnType("bigint");

                    b.Property<long>("Rip")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Timbre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalReglement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VcId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VendeurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Bls");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BlProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasReduction")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastPuv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Puv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Reduction")
                        .HasColumnType("real");

                    b.Property<Guid>("SelectedStockId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BlId");

                    b.HasIndex("SelectedStockId");

                    b.ToTable("BlProducts");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BonAchats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeBA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFermuture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Heure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantTotalHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalHTApresRemise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Remise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RestTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Rib")
                        .HasColumnType("bigint");

                    b.Property<long>("Rip")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Timbre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalReglement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VendeurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FournisseurId");

                    b.ToTable("BonAchats");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BonCommandeClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeBC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFermuture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantTotalHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalHTApresRemise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Remise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RestTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Rib")
                        .HasColumnType("bigint");

                    b.Property<long>("Rip")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Timbre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalReglement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VendeurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("BonCommandeClients");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BonCommandeFournisseur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeBC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFermuture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Heure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantTotalHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalHTApresRemise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Remise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RestTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Rib")
                        .HasColumnType("bigint");

                    b.Property<long>("Rip")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Timbre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalReglement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VendeurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FournisseurId");

                    b.ToTable("BonCommandeFournisseurs");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Caisses", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal?>("SoldeJ")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SoldeM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Vendeur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Caisses");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.CategoryAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryAttribute");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commerce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<decimal>("Nic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nif")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nrc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Numarticle")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RaisonSociale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAvances")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCredits")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52a857b7-ee3c-42db-96a7-76d3042818ac"),
                            Addresse = "Adresse",
                            Commerce = "Client Comptoir",
                            DateEcheance = new DateTime(2035, 2, 24, 15, 4, 25, 416, DateTimeKind.Local).AddTicks(9201),
                            Email = "guest-client@gmail.com",
                            FullName = "Client Comptoir",
                            IsBanned = false,
                            IsDisabled = false,
                            Nic = 45421845214m,
                            Nif = 845784545m,
                            Nrc = 548512451m,
                            Numarticle = 0m,
                            RaisonSociale = "Client Anonyme",
                            Tel = "0561596837",
                            TotalAvances = 0m,
                            TotalCredits = 0m
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.ClientFidelite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<decimal>("Withdraw")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ClientFidelites");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.CreanceAssainie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AncienCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AssainissementSur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAssainissement")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontantAssainissement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Motif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Reste")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CreanceAssainies");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.CreditClients", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCredit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontantCredit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("CreditClients");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.DefaultConfigLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AutorisationQteNeg")
                        .HasColumnType("bit");

                    b.Property<string>("DeviseParDefault")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MargeBenifDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MargeBenifGros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MinimumPointsToWithdraw")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModeVente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PointsGagner")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("PrixAchatMoyPondere")
                        .HasColumnType("bit");

                    b.Property<decimal>("SommeFacture")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Timbre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tva")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DefaultConfigLogs");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Depense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Somme")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Depenses");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FacProProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FactureProformatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasReduction")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastPuv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Puv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Reduction")
                        .HasColumnType("real");

                    b.Property<Guid>("SelectedStockId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FactureProformatId");

                    b.HasIndex("SelectedStockId");

                    b.ToTable("FacProProducts");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FacProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FactureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasReduction")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastPuv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Puv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Reduction")
                        .HasColumnType("real");

                    b.Property<Guid>("SelectedStockId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FactureId");

                    b.HasIndex("SelectedStockId");

                    b.ToTable("FacProducts");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Facture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Caisse")
                        .HasColumnType("int");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionPaiement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CouponPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFermuture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MontantTotalHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalHTApresRemise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomCaissier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Remise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RestTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Rib")
                        .HasColumnType("bigint");

                    b.Property<long>("Rip")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Timbre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalReglement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VcId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VendeurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FactureAvoir", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAvoir")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeureAvoir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdFactureOriginal")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NumeroAvoir")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TypeAvoir")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFactureOriginal");

                    b.ToTable("FactureAvoirs");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FactureProformat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeFP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFermuture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantTotalHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalHTApresRemise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Remise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RestTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Rib")
                        .HasColumnType("bigint");

                    b.Property<long>("Rip")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Timbre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalReglement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VendeurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("factureProformats");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Fournisseur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commerce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<decimal>("Nic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nif")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nrc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Numarticle")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RaisonSociale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAvances")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCredits")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Inventaire", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Annuel")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalProduitsEnManque")
                        .HasColumnType("int");

                    b.Property<int>("TotalProduitsEnSurnombre")
                        .HasColumnType("int");

                    b.Property<int>("TotalProduitsInventaire")
                        .HasColumnType("int");

                    b.Property<int>("Trimestre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Inventaires");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.InventaireEquipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreationInv")
                        .HasColumnType("datetime2");

                    b.Property<int>("Equipe")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InventaireEquipes");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.LignesInventaireEquipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeBar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeProduit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Equipe")
                        .HasColumnType("int");

                    b.Property<Guid?>("InventaireEquipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomProduit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuantiteTrouvee")
                        .HasColumnType("int");

                    b.Property<string>("Rayonnage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InventaireEquipeId");

                    b.ToTable("LignesInventaireEquipes");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.LignesInventaireFinal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeBar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeProduit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Egaux")
                        .HasColumnType("bit");

                    b.Property<string>("InventaireId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Manque")
                        .HasColumnType("bit");

                    b.Property<string>("NomProduit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QteEcart")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantiteStockLogiciel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantiteTrouveeA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantiteTrouveeB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantiteTrouveeReel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rayonnage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Surnombre")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InventaireId");

                    b.ToTable("LignesInventaireFinals");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.MotifModification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AncienneValeur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdAvoir")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LigneFactureItem")
                        .HasColumnType("int");

                    b.Property<string>("ModificationAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Motif")
                        .HasColumnType("int");

                    b.Property<string>("NouvelleValeur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdAvoir");

                    b.ToTable("MotifModifications");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.MouvementStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateMvt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProduitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProduitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeMouvement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MouvementStocks");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.NiveauFidelite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxPointsRequis")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Remise")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("NiveauFidelites");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.ProductAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryAttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CategoryAttributeId");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.ProductAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductAttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("ProductAttributeValues");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Reglement_Acompte_BA_Fournisseur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BAId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BAId");

                    b.HasIndex("FournisseurId");

                    b.ToTable("Reglement_Acompte_BA_Fournisseurs");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Reglement_Acompte_Facture_Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FactureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("FactureId");

                    b.ToTable("Reglement_Acompte_Facture_Clients");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.RetourProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Puv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("RetourProduitClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SelectedStockId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RetourProduitClientId");

                    b.HasIndex("SelectedStockId");

                    b.ToTable("RetourProducts");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.RetourProductsAvoir", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FactureAvoirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Puv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FactureAvoirId");

                    b.ToTable("RetourProductsAvoirs");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.RetourProduitClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Heure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantTotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal>("RestTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReturnedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("RetourProduitClients");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.SocieteInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Activite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomSociete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroArticle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistreCommerce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siteweb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocieteInfos");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeBar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePeremption")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designaation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FournisseurId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFavoris")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPerissable")
                        .HasColumnType("bit");

                    b.Property<int>("JourAlerte")
                        .HasColumnType("int");

                    b.Property<decimal>("PrixAchat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrixVenteDetail")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrixVenteGros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductAttributeValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QteAlerte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QteInitiale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QteRestante")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Rayonnage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalBenifice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.VenteComptoir", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Benifice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Caisse")
                        .HasColumnType("int");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeVc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionDePaiment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conducteur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CouponPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFermuture")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransformed")
                        .HasColumnType("bit");

                    b.Property<string>("LieuLivraison")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatriculeVeh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantTotalHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalHTApresRemise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTotalTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomCaissier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomVehicule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Remise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RestTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Rib")
                        .HasColumnType("bigint");

                    b.Property<long>("Rip")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Timbre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalReglement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VendeurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("VenteComptoirs");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.VenteComptoirProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasReduction")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastPuv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Puv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Qte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Reduction")
                        .HasColumnType("real");

                    b.Property<Guid>("SelectedStockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VenteComptoirId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SelectedStockId");

                    b.HasIndex("VenteComptoirId");

                    b.ToTable("VenteComptoirProducts");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.AbcProducts", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.BonCommandeFournisseur", null)
                        .WithMany("AbcProducts")
                        .HasForeignKey("BonCommandeFournisseurId");

                    b.HasOne("SmartRestaurant.Domain.Entities.Stock", "SelectedStock")
                        .WithMany()
                        .HasForeignKey("SelectedStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.AjoutProductsAvoir", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FactureAvoir", "FactureAvoir")
                        .WithMany("ProduitsAjouterAuStock")
                        .HasForeignKey("FactureAvoirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.AttributeValue", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.ProductAttribute", "ProductAttribute")
                        .WithMany("AttributeValues")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.AvanceClients", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BAProducts", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.BonAchats", null)
                        .WithMany("BAProducts")
                        .HasForeignKey("BonAchatsId");

                    b.HasOne("SmartRestaurant.Domain.Entities.Stock", "SelectedStock")
                        .WithMany()
                        .HasForeignKey("SelectedStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BcProducts", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.BonCommandeClient", "BonCommandeClient")
                        .WithMany("BcProducts")
                        .HasForeignKey("BcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartRestaurant.Domain.Entities.Stock", "SelectedStock")
                        .WithMany()
                        .HasForeignKey("SelectedStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Bl", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BlProducts", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Bl", null)
                        .WithMany("BlProducts")
                        .HasForeignKey("BlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartRestaurant.Domain.Entities.Stock", "SelectedStock")
                        .WithMany()
                        .HasForeignKey("SelectedStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BonAchats", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BonCommandeClient", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.BonCommandeFournisseur", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.CategoryAttribute", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Category", "Category")
                        .WithMany("CategorieAttributs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.CreditClients", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FacProProducts", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FactureProformat", "FactureProformat")
                        .WithMany("FacProProducts")
                        .HasForeignKey("FactureProformatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartRestaurant.Domain.Entities.Stock", "SelectedStock")
                        .WithMany()
                        .HasForeignKey("SelectedStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FacProducts", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Facture", "Facture")
                        .WithMany("FacProducts")
                        .HasForeignKey("FactureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartRestaurant.Domain.Entities.Stock", "SelectedStock")
                        .WithMany()
                        .HasForeignKey("SelectedStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Facture", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FactureAvoir", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Facture", "OriginalFacture")
                        .WithMany("FactureAvoirs")
                        .HasForeignKey("IdFactureOriginal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FactureProformat", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.LignesInventaireEquipe", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.InventaireEquipe", null)
                        .WithMany("Lignes")
                        .HasForeignKey("InventaireEquipeId");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.LignesInventaireFinal", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Inventaire", null)
                        .WithMany("LignesInventaire")
                        .HasForeignKey("InventaireId");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.MotifModification", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FactureAvoir", "FactureAvoir")
                        .WithMany("MotifsAvoir")
                        .HasForeignKey("IdAvoir")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.ProductAttribute", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.CategoryAttribute", "CategoryAttribute")
                        .WithMany("ProductsAttributes")
                        .HasForeignKey("CategoryAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.ProductAttributeValue", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Reglement_Acompte_BA_Fournisseur", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.BonAchats", "Ba")
                        .WithMany("Reglement_Acompte_BA_Fournisseurs")
                        .HasForeignKey("BAId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartRestaurant.Domain.Entities.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Reglement_Acompte_Facture_Client", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartRestaurant.Domain.Entities.Facture", "Facture")
                        .WithMany("Reglement_Acompte_Facture_Clients")
                        .HasForeignKey("FactureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.RetourProducts", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.RetourProduitClient", null)
                        .WithMany("RetourProducts")
                        .HasForeignKey("RetourProduitClientId");

                    b.HasOne("SmartRestaurant.Domain.Entities.Stock", "SelectedStock")
                        .WithMany()
                        .HasForeignKey("SelectedStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.RetourProductsAvoir", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FactureAvoir", null)
                        .WithMany("ProduitsRetournes")
                        .HasForeignKey("FactureAvoirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.RetourProduitClient", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.VenteComptoir", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.VenteComptoirProducts", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Stock", "SelectedStock")
                        .WithMany()
                        .HasForeignKey("SelectedStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartRestaurant.Domain.Entities.VenteComptoir", null)
                        .WithMany("VenteComptoirIncludedProducts")
                        .HasForeignKey("VenteComptoirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
