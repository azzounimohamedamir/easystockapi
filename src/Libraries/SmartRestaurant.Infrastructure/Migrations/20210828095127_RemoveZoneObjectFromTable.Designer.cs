// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartRestaurant.Infrastructure.Persistence;

namespace SmartRestaurant.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210828095127_RemoveZoneObjectFromTable")]
    partial class RemoveZoneObjectFromTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusiness", b =>
                {
                    b.Property<Guid>("FoodBusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AcceptTakeout")
                        .HasColumnType("bit");

                    b.Property<bool>("AcceptsCreditCards")
                        .HasColumnType("bit");

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodBusinessAdministratorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodBusinessCategory")
                        .HasColumnType("int");

                    b.Property<int>("FoodBusinessState")
                        .HasColumnType("int");

                    b.Property<int>("FourDigitCode")
                        .HasColumnType("int");

                    b.Property<bool>("HasCarParking")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHandicapFriendly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NIF")
                        .HasColumnType("int");

                    b.Property<int>("NIS")
                        .HasColumnType("int");

                    b.Property<int>("NRC")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberRatings")
                        .HasColumnType("int");

                    b.Property<bool>("OffersTakeout")
                        .HasColumnType("bit");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodBusinessId");

                    b.ToTable("FoodBusinesses");

                    b.HasData(
                        new
                        {
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            AcceptTakeout = true,
                            AcceptsCreditCards = true,
                            AverageRating = 4.0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Envie de découvrir la cuisine indienne, le restaurant Taj Mahal vous invite à le faire et voyager à travers les odeurs des épices orientales qui se dégagent de ses mets à spécialités indiennes.",
                            FoodBusinessAdministratorId = "3cbf3570-4444-4444-8746-29b7cf568093",
                            FoodBusinessCategory = 0,
                            FoodBusinessState = 0,
                            FourDigitCode = 0,
                            HasCarParking = true,
                            IsHandicapFriendly = false,
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NIF = 0,
                            NIS = 0,
                            NRC = 0,
                            Name = "Taj mahal",
                            NumberRatings = 0,
                            OffersTakeout = true,
                            Tags = "",
                            Website = "https://restoalgerie.com/restaurant/taj-mahal-restaurant-indien/"
                        },
                        new
                        {
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            AcceptTakeout = true,
                            AcceptsCreditCards = true,
                            AverageRating = 4.0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodBusinessAdministratorId = "44bf3570-0d44-4673-8746-29b7cf568088",
                            FoodBusinessCategory = 0,
                            FoodBusinessState = 0,
                            FourDigitCode = 0,
                            HasCarParking = true,
                            IsHandicapFriendly = true,
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NIF = 0,
                            NIS = 0,
                            NRC = 0,
                            Name = "Mcdonald's",
                            NumberRatings = 0,
                            OffersTakeout = true,
                            Tags = "",
                            Website = ""
                        },
                        new
                        {
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            AcceptTakeout = true,
                            AcceptsCreditCards = true,
                            AverageRating = 5.0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ETuoYe SMdsYsup qqbdspY NEeZvsaI sUcIOE sVmPkJx RZFk FOKzUkG ffAsUB XyINU fhhIB OiIfN Antdhb XHbtaO UlStFP adgVv CRTToT Mcv FAHcd YyGH. CdDIPW TtDBaI qYg wVcSK NAXHnVC xpNBE fRufEW fggeTKc Iqq dfGZPAqoc MYxnH NCLtDA qqV TNYR LbwaYqv cvIiSvl KBTMl xAxHmu dilIqO mGM kxDhvLT PsYPdCB yZE uFfvGxQp uvoeDsAaE QQjgKs CnAnhrs qNPzSuq bvZjqMfy aaEGCqc XrvE KFXnmA mEnN uGHJt WypGwSiJDmP qBDWYau SzbxbSRUb CMwhBXiYA vQCTdtiB oVkRA XpHYTFE BYFpDTVlV zafiNugG YFyiIvYhhgyzj MihfVEqk OWlRLG YAUn sXWO jbKyczKOQfhXa qziTc xxMFCM WfVzT oPdKGSK Zz CzXeis.",
                            FoodBusinessAdministratorId = "08a1a626-7f8e-4b51-84fc-fc51b6302cca",
                            FoodBusinessCategory = 0,
                            FoodBusinessState = 0,
                            FourDigitCode = 0,
                            HasCarParking = false,
                            IsHandicapFriendly = false,
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NIF = 0,
                            NIS = 0,
                            NRC = 0,
                            Name = "BigMama",
                            NumberRatings = 0,
                            OffersTakeout = true,
                            Tags = "",
                            Website = "https://bigmama.com"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ImageBytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLogo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodBusinessImages");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessUser", b =>
                {
                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationUserId", "FoodBusinessId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("FoodBusinessUsers");

                    b.HasData(
                        new
                        {
                            ApplicationUserId = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093")
                        },
                        new
                        {
                            ApplicationUserId = "d466ef00-61f1-4e77-801a-b516f0f12323",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093")
                        },
                        new
                        {
                            ApplicationUserId = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099")
                        },
                        new
                        {
                            ApplicationUserId = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022")
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.LinkedDevice", b =>
                {
                    b.Property<Guid>("LinkedDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentifierDevice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkedDeviceId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("LinkedDevices");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuState")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aaba"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(1949),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "TajMhal Dishes Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aabb"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(2259),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "TajMhal Pizza Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aabc"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(2273),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "TajMhal Sandwiches Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aabd"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(2277),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "TajMhal Beverage  Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aabe"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(2280),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "TajMhal Dessert Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aa00"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(2284),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "Mcdonald Sandwiches Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aa01"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(2287),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "Mcdonald Beverage  Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aa02"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(2291),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "Mcdonald Dessert Menu"
                        },
                        new
                        {
                            MenuId = new Guid("e2289d77-b8e1-4476-bf66-e64f1a23d752"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(2294),
                            CreatedBy = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "BigMama Sandwiches Menu"
                        },
                        new
                        {
                            MenuId = new Guid("8f8c0139-1f90-40f3-ab88-5db2de45ff2e"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(2298),
                            CreatedBy = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "BigMama Beverage  Menu"
                        },
                        new
                        {
                            MenuId = new Guid("45051fc7-6983-44a5-9c12-66116c4533bf"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(2301),
                            CreatedBy = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "BigMama Dessert Menu"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Reservation", b =>
                {
                    b.Property<Guid>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDiners")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596300"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(4709),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 2,
                            ReservationDate = new DateTime(2021, 8, 28, 15, 51, 26, 390, DateTimeKind.Local).AddTicks(2065),
                            ReservationName = "ReservationName_00"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596301"),
                            CreatedAt = new DateTime(2021, 8, 28, 15, 51, 26, 402, DateTimeKind.Local).AddTicks(5248),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2021, 8, 28, 18, 51, 26, 402, DateTimeKind.Local).AddTicks(5216),
                            ReservationName = "ReservationName_01"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596302"),
                            CreatedAt = new DateTime(2021, 8, 13, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5287),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2021, 8, 29, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5262),
                            ReservationName = "ReservationName_02"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596303"),
                            CreatedAt = new DateTime(2021, 9, 12, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5372),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 2,
                            ReservationDate = new DateTime(2026, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5294),
                            ReservationName = "ReservationName_03"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596304"),
                            CreatedAt = new DateTime(2021, 8, 28, 11, 27, 26, 402, DateTimeKind.Local).AddTicks(5379),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 8,
                            ReservationDate = new DateTime(2036, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5375),
                            ReservationName = "ReservationName_04"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596305"),
                            CreatedAt = new DateTime(2021, 8, 27, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5400),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 13,
                            ReservationDate = new DateTime(2021, 8, 28, 7, 51, 26, 402, DateTimeKind.Local).AddTicks(5400),
                            ReservationName = "ReservationName_05"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596306"),
                            CreatedAt = new DateTime(2021, 7, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5407),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 7,
                            ReservationDate = new DateTime(2021, 8, 16, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5407),
                            ReservationName = "ReservationName_06"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596307"),
                            CreatedAt = new DateTime(2021, 6, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5410),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 9,
                            ReservationDate = new DateTime(2021, 7, 6, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5410),
                            ReservationName = "ReservationName_07"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596308"),
                            CreatedAt = new DateTime(2021, 12, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5417),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2022, 1, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5414),
                            ReservationName = "ReservationName_08"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596309"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5421),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2021, 8, 28, 14, 51, 26, 402, DateTimeKind.Local).AddTicks(5421),
                            ReservationName = "ReservationName_09"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596310"),
                            CreatedAt = new DateTime(2021, 8, 28, 15, 51, 26, 402, DateTimeKind.Local).AddTicks(5424),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 6,
                            ReservationDate = new DateTime(2021, 8, 28, 17, 51, 26, 402, DateTimeKind.Local).AddTicks(5424),
                            ReservationName = "ReservationName_10"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596311"),
                            CreatedAt = new DateTime(2021, 8, 14, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5428),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 8, 30, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5428),
                            ReservationName = "ReservationName_11"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596312"),
                            CreatedAt = new DateTime(2021, 10, 18, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5431),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2025, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5431),
                            ReservationName = "ReservationName_12"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596313"),
                            CreatedAt = new DateTime(2021, 8, 28, 11, 27, 26, 402, DateTimeKind.Local).AddTicks(5439),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 9,
                            ReservationDate = new DateTime(2036, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5435),
                            ReservationName = "ReservationName_13"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596314"),
                            CreatedAt = new DateTime(2021, 8, 26, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5442),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 14,
                            ReservationDate = new DateTime(2021, 8, 28, 6, 51, 26, 402, DateTimeKind.Local).AddTicks(5442),
                            ReservationName = "ReservationName_14"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596315"),
                            CreatedAt = new DateTime(2021, 7, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5446),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 8,
                            ReservationDate = new DateTime(2021, 8, 15, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5446),
                            ReservationName = "ReservationName_15"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596316"),
                            CreatedAt = new DateTime(2021, 5, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5449),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 10,
                            ReservationDate = new DateTime(2021, 7, 9, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5449),
                            ReservationName = "ReservationName_16"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596317"),
                            CreatedAt = new DateTime(2021, 11, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5456),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2021, 12, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5453),
                            ReservationName = "ReservationName_17"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596327"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5460),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2021, 8, 28, 13, 51, 26, 402, DateTimeKind.Local).AddTicks(5460),
                            ReservationName = "ReservationName_27"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596328"),
                            CreatedAt = new DateTime(2021, 8, 28, 14, 51, 26, 402, DateTimeKind.Local).AddTicks(5463),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 6,
                            ReservationDate = new DateTime(2021, 8, 28, 16, 51, 26, 402, DateTimeKind.Local).AddTicks(5463),
                            ReservationName = "ReservationName_28"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596329"),
                            CreatedAt = new DateTime(2021, 8, 14, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5470),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 8, 29, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5467),
                            ReservationName = "ReservationName_29"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596330"),
                            CreatedAt = new DateTime(2021, 10, 22, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5474),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2024, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5470),
                            ReservationName = "ReservationName_30"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596331"),
                            CreatedAt = new DateTime(2021, 8, 28, 11, 6, 26, 402, DateTimeKind.Local).AddTicks(5477),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 9,
                            ReservationDate = new DateTime(2034, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5477),
                            ReservationName = "ReservationName_31"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596332"),
                            CreatedAt = new DateTime(2021, 8, 25, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5481),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 14,
                            ReservationDate = new DateTime(2021, 8, 28, 7, 51, 26, 402, DateTimeKind.Local).AddTicks(5481),
                            ReservationName = "ReservationName_32"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596333"),
                            CreatedAt = new DateTime(2021, 7, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5484),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 8,
                            ReservationDate = new DateTime(2021, 8, 18, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5484),
                            ReservationName = "ReservationName_33"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596334"),
                            CreatedAt = new DateTime(2021, 6, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5491),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 10,
                            ReservationDate = new DateTime(2021, 7, 16, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5488),
                            ReservationName = "ReservationName_34"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596335"),
                            CreatedAt = new DateTime(2021, 10, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5495),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2021, 11, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5495),
                            ReservationName = "ReservationName_35"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596336"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5498),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 8, 28, 11, 51, 26, 402, DateTimeKind.Local).AddTicks(5498),
                            ReservationName = "ReservationName_36"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596337"),
                            CreatedAt = new DateTime(2021, 8, 28, 12, 51, 26, 402, DateTimeKind.Local).AddTicks(5502),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2021, 8, 28, 14, 51, 26, 402, DateTimeKind.Local).AddTicks(5502),
                            ReservationName = "ReservationName_37"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596338"),
                            CreatedAt = new DateTime(2021, 8, 14, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5506),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 6,
                            ReservationDate = new DateTime(2021, 9, 2, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5506),
                            ReservationName = "ReservationName_38"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596339"),
                            CreatedAt = new DateTime(2021, 9, 17, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5509),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 7,
                            ReservationDate = new DateTime(2023, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5509),
                            ReservationName = "ReservationName_39"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596340"),
                            CreatedAt = new DateTime(2021, 8, 28, 11, 34, 26, 402, DateTimeKind.Local).AddTicks(5513),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 10,
                            ReservationDate = new DateTime(2031, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5513),
                            ReservationName = "ReservationName_40"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596341"),
                            CreatedAt = new DateTime(2021, 8, 23, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5516),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 17,
                            ReservationDate = new DateTime(2021, 8, 27, 22, 51, 26, 402, DateTimeKind.Local).AddTicks(5516),
                            ReservationName = "ReservationName_41"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596342"),
                            CreatedAt = new DateTime(2021, 7, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5520),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 8, 21, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5520),
                            ReservationName = "ReservationName_42"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596343"),
                            CreatedAt = new DateTime(2021, 9, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5527),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 11,
                            ReservationDate = new DateTime(2021, 10, 10, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5523),
                            ReservationName = "ReservationName_43"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596344"),
                            CreatedAt = new DateTime(2021, 10, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5530),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 2,
                            ReservationDate = new DateTime(2021, 11, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(5530),
                            ReservationName = "ReservationName_44"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Section", b =>
                {
                    b.Property<Guid>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionId");

                    b.HasIndex("MenuId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.SubSection", b =>
                {
                    b.Property<Guid>("SubSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubSectionId");

                    b.HasIndex("SectionId");

                    b.ToTable("SubSections");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Table", b =>
                {
                    b.Property<Guid>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.Property<short>("TableState")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ZoneId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TableId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129ab00"),
                            Capacity = 4,
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(9804),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 4,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc0")
                        },
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129ab01"),
                            Capacity = 6,
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(157),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 5,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc1")
                        },
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129ab02"),
                            Capacity = 4,
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(199),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 10,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc2")
                        },
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129ab03"),
                            Capacity = 3,
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(206),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 7,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc3")
                        },
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129aba2"),
                            Capacity = 5,
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(209),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 7,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-33ff-bfaa-07c08082aba1")
                        },
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129aba3"),
                            Capacity = 3,
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(213),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 3,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-33ff-bfaa-07c08082aba2")
                        },
                        new
                        {
                            TableId = new Guid("b006e2c5-5b8e-4584-8021-3cecd76c9ca6"),
                            Capacity = 6,
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 403, DateTimeKind.Local).AddTicks(216),
                            CreatedBy = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 8,
                            TableState = (short)0,
                            ZoneId = new Guid("f60d55e2-4e54-4896-9632-98d36d7680c3")
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Zone", b =>
                {
                    b.Property<Guid>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZoneId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("Zones");

                    b.HasData(
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc0"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(7515),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "TajMhal VIP Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc1"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(7910),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "TajMhal FAMILY Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc2"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(7924),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "TajMhal NORMAL Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc3"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(7928),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "TajMhal OUTDOOR Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-33ff-bfaa-07c08082aba1"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(7932),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "Mcdonald NORMAL Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-33ff-bfaa-07c08082aba2"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(7935),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "Mcdonald OUTDOOR Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("f60d55e2-4e54-4896-9632-98d36d7680c3"),
                            CreatedAt = new DateTime(2021, 8, 28, 10, 51, 26, 402, DateTimeKind.Local).AddTicks(7939),
                            CreatedBy = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "BigMama SHARED Zone"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusiness", b =>
                {
                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("FoodBusinessId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StreetAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FoodBusinessId");

                            b1.ToTable("FoodBusinesses");

                            b1.WithOwner()
                                .HasForeignKey("FoodBusinessId");

                            b1.OwnsOne("SmartRestaurant.Domain.ValueObjects.GeoPosition", "GeoPosition", b2 =>
                                {
                                    b2.Property<Guid>("AddressFoodBusinessId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Latitude")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Longitude")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AddressFoodBusinessId");

                                    b2.ToTable("FoodBusinesses");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressFoodBusinessId");
                                });
                        });

                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("FoodBusinessId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("CountryCode")
                                .HasColumnType("int");

                            b1.Property<int>("Number")
                                .HasColumnType("int");

                            b1.HasKey("FoodBusinessId");

                            b1.ToTable("FoodBusinesses");

                            b1.WithOwner()
                                .HasForeignKey("FoodBusinessId");
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessUser", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.LinkedDevice", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Menu", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Section", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.SubSection", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Zone", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
