// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartRestaurant.Infrastructure.Persistence;

namespace SmartRestaurant.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210711224111_updateSeedData_02")]
    partial class updateSeedData_02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusiness", b =>
                {
                    b.Property<Guid>("FoodBusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AcceptTakeout")
                        .HasColumnType("bit");

                    b.Property<bool>("AcceptsCreditCards")
                        .HasColumnType("bit");

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodBusinessAdministratorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodBusinessCategory")
                        .HasColumnType("int");

                    b.Property<int>("FoodBusinessState")
                        .HasColumnType("int");

                    b.Property<bool>("HasCarParking")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHandicapFriendly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NIF")
                        .HasColumnType("int");

                    b.Property<int>("NIS")
                        .HasColumnType("int");

                    b.Property<int>("NRC")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberRatings")
                        .HasColumnType("int");

                    b.Property<bool>("OffersTakeout")
                        .HasColumnType("bit");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodBusinessId");

                    b.ToTable("FoodBusinesses");

                    b.HasData(
                        new
                        {
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            AcceptTakeout = true,
                            AcceptsCreditCards = true,
                            AverageRating = 4.0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodBusinessAdministratorId = "3cbf3570-4444-4444-8746-29b7cf568093",
                            FoodBusinessCategory = 0,
                            FoodBusinessState = 0,
                            HasCarParking = true,
                            IsHandicapFriendly = true,
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NIF = 0,
                            NIS = 0,
                            NRC = 0,
                            Name = "Taj mahal",
                            NumberRatings = 0,
                            OffersTakeout = true,
                            Tags = "",
                            Website = ""
                        },
                        new
                        {
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            AcceptTakeout = true,
                            AcceptsCreditCards = true,
                            AverageRating = 4.0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            FoodBusinessAdministratorId = "44bf3570-0d44-4673-8746-29b7cf568088",
                            FoodBusinessCategory = 0,
                            FoodBusinessState = 0,
                            HasCarParking = true,
                            IsHandicapFriendly = true,
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NIF = 0,
                            NIS = 0,
                            NRC = 0,
                            Name = "Mcdonald's",
                            NumberRatings = 0,
                            OffersTakeout = true,
                            Tags = "",
                            Website = ""
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ImageBytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLogo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodBusinessImages");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessUser", b =>
                {
                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationUserId", "FoodBusinessId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("FoodBusinessUsers");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuState")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Reservation", b =>
                {
                    b.Property<Guid>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDiners")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596300"),
                            CreatedAt = new DateTime(2021, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(7057),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 2,
                            ReservationDate = new DateTime(2021, 7, 12, 4, 41, 10, 628, DateTimeKind.Local).AddTicks(635),
                            ReservationName = "ReservationName_00"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596301"),
                            CreatedAt = new DateTime(2021, 7, 12, 4, 41, 10, 630, DateTimeKind.Local).AddTicks(8076),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2021, 7, 12, 7, 41, 10, 630, DateTimeKind.Local).AddTicks(7983),
                            ReservationName = "ReservationName_01"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596302"),
                            CreatedAt = new DateTime(2021, 6, 26, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8141),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2021, 7, 12, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8103),
                            ReservationName = "ReservationName_02"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596303"),
                            CreatedAt = new DateTime(2021, 7, 26, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8278),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 2,
                            ReservationDate = new DateTime(2026, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8155),
                            ReservationName = "ReservationName_03"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596304"),
                            CreatedAt = new DateTime(2021, 7, 12, 0, 17, 10, 630, DateTimeKind.Local).AddTicks(8300),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 8,
                            ReservationDate = new DateTime(2036, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8291),
                            ReservationName = "ReservationName_04"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596305"),
                            CreatedAt = new DateTime(2021, 7, 10, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8335),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 13,
                            ReservationDate = new DateTime(2021, 7, 11, 20, 41, 10, 630, DateTimeKind.Local).AddTicks(8332),
                            ReservationName = "ReservationName_05"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596306"),
                            CreatedAt = new DateTime(2021, 6, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8345),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 7,
                            ReservationDate = new DateTime(2021, 6, 29, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8343),
                            ReservationName = "ReservationName_06"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596307"),
                            CreatedAt = new DateTime(2021, 5, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8357),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 9,
                            ReservationDate = new DateTime(2021, 5, 19, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8355),
                            ReservationName = "ReservationName_07"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596308"),
                            CreatedAt = new DateTime(2021, 11, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8368),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 12, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8365),
                            ReservationName = "ReservationName_08"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596309"),
                            CreatedAt = new DateTime(2021, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8378),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2021, 7, 12, 3, 41, 10, 630, DateTimeKind.Local).AddTicks(8375),
                            ReservationName = "ReservationName_09"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596310"),
                            CreatedAt = new DateTime(2021, 7, 12, 4, 41, 10, 630, DateTimeKind.Local).AddTicks(8386),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 6,
                            ReservationDate = new DateTime(2021, 7, 12, 6, 41, 10, 630, DateTimeKind.Local).AddTicks(8384),
                            ReservationName = "ReservationName_10"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596311"),
                            CreatedAt = new DateTime(2021, 6, 27, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8396),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 7, 13, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8394),
                            ReservationName = "ReservationName_11"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596312"),
                            CreatedAt = new DateTime(2021, 8, 31, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8406),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2025, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8403),
                            ReservationName = "ReservationName_12"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596313"),
                            CreatedAt = new DateTime(2021, 7, 12, 0, 17, 10, 630, DateTimeKind.Local).AddTicks(8418),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 9,
                            ReservationDate = new DateTime(2036, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8415),
                            ReservationName = "ReservationName_13"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596314"),
                            CreatedAt = new DateTime(2021, 7, 9, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8427),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 14,
                            ReservationDate = new DateTime(2021, 7, 11, 19, 41, 10, 630, DateTimeKind.Local).AddTicks(8425),
                            ReservationName = "ReservationName_14"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596315"),
                            CreatedAt = new DateTime(2021, 6, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8437),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 8,
                            ReservationDate = new DateTime(2021, 6, 28, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8434),
                            ReservationName = "ReservationName_15"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596316"),
                            CreatedAt = new DateTime(2021, 4, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8446),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 10,
                            ReservationDate = new DateTime(2021, 5, 22, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8444),
                            ReservationName = "ReservationName_16"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596317"),
                            CreatedAt = new DateTime(2021, 10, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8455),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2021, 11, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8453),
                            ReservationName = "ReservationName_17"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596327"),
                            CreatedAt = new DateTime(2021, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8465),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2021, 7, 12, 2, 41, 10, 630, DateTimeKind.Local).AddTicks(8463),
                            ReservationName = "ReservationName_27"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596328"),
                            CreatedAt = new DateTime(2021, 7, 12, 3, 41, 10, 630, DateTimeKind.Local).AddTicks(8474),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 6,
                            ReservationDate = new DateTime(2021, 7, 12, 5, 41, 10, 630, DateTimeKind.Local).AddTicks(8472),
                            ReservationName = "ReservationName_28"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596329"),
                            CreatedAt = new DateTime(2021, 6, 27, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8486),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 7, 12, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8484),
                            ReservationName = "ReservationName_29"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596330"),
                            CreatedAt = new DateTime(2021, 9, 4, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8497),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2024, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8494),
                            ReservationName = "ReservationName_30"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596331"),
                            CreatedAt = new DateTime(2021, 7, 11, 23, 56, 10, 630, DateTimeKind.Local).AddTicks(8509),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 9,
                            ReservationDate = new DateTime(2034, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8507),
                            ReservationName = "ReservationName_31"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596332"),
                            CreatedAt = new DateTime(2021, 7, 8, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8519),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 14,
                            ReservationDate = new DateTime(2021, 7, 11, 20, 41, 10, 630, DateTimeKind.Local).AddTicks(8516),
                            ReservationName = "ReservationName_32"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596333"),
                            CreatedAt = new DateTime(2021, 6, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8527),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 8,
                            ReservationDate = new DateTime(2021, 7, 1, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8525),
                            ReservationName = "ReservationName_33"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596334"),
                            CreatedAt = new DateTime(2021, 5, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8537),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 10,
                            ReservationDate = new DateTime(2021, 5, 29, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8534),
                            ReservationName = "ReservationName_34"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596335"),
                            CreatedAt = new DateTime(2021, 9, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8547),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2021, 10, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8544),
                            ReservationName = "ReservationName_35"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596336"),
                            CreatedAt = new DateTime(2021, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8738),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 7, 12, 0, 41, 10, 630, DateTimeKind.Local).AddTicks(8733),
                            ReservationName = "ReservationName_36"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596337"),
                            CreatedAt = new DateTime(2021, 7, 12, 1, 41, 10, 630, DateTimeKind.Local).AddTicks(8749),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2021, 7, 12, 3, 41, 10, 630, DateTimeKind.Local).AddTicks(8746),
                            ReservationName = "ReservationName_37"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596338"),
                            CreatedAt = new DateTime(2021, 6, 27, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8758),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 6,
                            ReservationDate = new DateTime(2021, 7, 16, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8756),
                            ReservationName = "ReservationName_38"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596339"),
                            CreatedAt = new DateTime(2021, 7, 31, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8769),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 7,
                            ReservationDate = new DateTime(2023, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8766),
                            ReservationName = "ReservationName_39"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596340"),
                            CreatedAt = new DateTime(2021, 7, 12, 0, 24, 10, 630, DateTimeKind.Local).AddTicks(8778),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 10,
                            ReservationDate = new DateTime(2031, 7, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8776),
                            ReservationName = "ReservationName_40"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596341"),
                            CreatedAt = new DateTime(2021, 7, 6, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8787),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 17,
                            ReservationDate = new DateTime(2021, 7, 11, 11, 41, 10, 630, DateTimeKind.Local).AddTicks(8785),
                            ReservationName = "ReservationName_41"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596342"),
                            CreatedAt = new DateTime(2021, 6, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8797),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 7, 4, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8794),
                            ReservationName = "ReservationName_42"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596343"),
                            CreatedAt = new DateTime(2021, 8, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8806),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 11,
                            ReservationDate = new DateTime(2021, 8, 23, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8804),
                            ReservationName = "ReservationName_43"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596344"),
                            CreatedAt = new DateTime(2021, 9, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8817),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 2,
                            ReservationDate = new DateTime(2021, 10, 11, 23, 41, 10, 630, DateTimeKind.Local).AddTicks(8814),
                            ReservationName = "ReservationName_44"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Section", b =>
                {
                    b.Property<Guid>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionId");

                    b.HasIndex("MenuId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.SubSection", b =>
                {
                    b.Property<Guid>("SubSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubSectionId");

                    b.HasIndex("SectionId");

                    b.ToTable("SubSections");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Table", b =>
                {
                    b.Property<Guid>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.Property<short>("TableState")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ZoneId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TableId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Zone", b =>
                {
                    b.Property<Guid>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZoneId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusiness", b =>
                {
                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("FoodBusinessId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StreetAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FoodBusinessId");

                            b1.ToTable("FoodBusinesses");

                            b1.WithOwner()
                                .HasForeignKey("FoodBusinessId");

                            b1.OwnsOne("SmartRestaurant.Domain.ValueObjects.GeoPosition", "GeoPosition", b2 =>
                                {
                                    b2.Property<Guid>("AddressFoodBusinessId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Latitude")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Longitude")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AddressFoodBusinessId");

                                    b2.ToTable("FoodBusinesses");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressFoodBusinessId");
                                });
                        });

                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("FoodBusinessId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("CountryCode")
                                .HasColumnType("int");

                            b1.Property<int>("Number")
                                .HasColumnType("int");

                            b1.HasKey("FoodBusinessId");

                            b1.ToTable("FoodBusinesses");

                            b1.WithOwner()
                                .HasForeignKey("FoodBusinessId");
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessUser", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Menu", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Section", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.SubSection", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Table", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Zone", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
