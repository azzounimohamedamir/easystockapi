// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartRestaurant.Infrastructure.Persistence;

namespace SmartRestaurant.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211015174400_AddArchivedPropertyToFoodBusinessClientSchema")]
    partial class AddArchivedPropertyToFoodBusinessClientSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Dish", b =>
                {
                    b.Property<Guid>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsSupplement")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PriceAmount")
                        .HasColumnType("real");

                    b.Property<Guid?>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DishId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.DishIngredient", b =>
                {
                    b.Property<Guid>("DishIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DishId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PricePerStep")
                        .HasColumnType("real");

                    b.HasKey("DishIngredientId");

                    b.ToTable("DishIngredients");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusiness", b =>
                {
                    b.Property<Guid>("FoodBusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AcceptTakeout")
                        .HasColumnType("bit");

                    b.Property<bool>("AcceptsCreditCards")
                        .HasColumnType("bit");

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DefaultCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodBusinessAdministratorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodBusinessCategory")
                        .HasColumnType("int");

                    b.Property<int>("FoodBusinessState")
                        .HasColumnType("int");

                    b.Property<int>("FourDigitCode")
                        .HasColumnType("int");

                    b.Property<bool>("HasCarParking")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHandicapFriendly")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NIF")
                        .HasColumnType("int");

                    b.Property<int>("NIS")
                        .HasColumnType("int");

                    b.Property<int>("NRC")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberRatings")
                        .HasColumnType("int");

                    b.Property<bool>("OffersTakeout")
                        .HasColumnType("bit");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodBusinessId");

                    b.ToTable("FoodBusinesses");

                    b.HasData(
                        new
                        {
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            AcceptTakeout = true,
                            AcceptsCreditCards = true,
                            AverageRating = 4.0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultCurrencyId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Envie de découvrir la cuisine indienne, le restaurant Taj Mahal vous invite à le faire et voyager à travers les odeurs des épices orientales qui se dégagent de ses mets à spécialités indiennes.",
                            FoodBusinessAdministratorId = "3cbf3570-4444-4444-8746-29b7cf568093",
                            FoodBusinessCategory = 0,
                            FoodBusinessState = 0,
                            FourDigitCode = 0,
                            HasCarParking = true,
                            IsHandicapFriendly = false,
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NIF = 0,
                            NIS = 0,
                            NRC = 0,
                            Name = "Taj mahal",
                            NumberRatings = 0,
                            OffersTakeout = true,
                            Tags = "",
                            Website = "https://restoalgerie.com/restaurant/taj-mahal-restaurant-indien/"
                        },
                        new
                        {
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            AcceptTakeout = true,
                            AcceptsCreditCards = true,
                            AverageRating = 4.0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultCurrencyId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "",
                            FoodBusinessAdministratorId = "44bf3570-0d44-4673-8746-29b7cf568088",
                            FoodBusinessCategory = 0,
                            FoodBusinessState = 0,
                            FourDigitCode = 0,
                            HasCarParking = true,
                            IsHandicapFriendly = true,
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NIF = 0,
                            NIS = 0,
                            NRC = 0,
                            Name = "Mcdonald's",
                            NumberRatings = 0,
                            OffersTakeout = true,
                            Tags = "",
                            Website = ""
                        },
                        new
                        {
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            AcceptTakeout = true,
                            AcceptsCreditCards = true,
                            AverageRating = 5.0,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefaultCurrencyId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "ETuoYe SMdsYsup qqbdspY NEeZvsaI sUcIOE sVmPkJx RZFk FOKzUkG ffAsUB XyINU fhhIB OiIfN Antdhb XHbtaO UlStFP adgVv CRTToT Mcv FAHcd YyGH. CdDIPW TtDBaI qYg wVcSK NAXHnVC xpNBE fRufEW fggeTKc Iqq dfGZPAqoc MYxnH NCLtDA qqV TNYR LbwaYqv cvIiSvl KBTMl xAxHmu dilIqO mGM kxDhvLT PsYPdCB yZE uFfvGxQp uvoeDsAaE QQjgKs CnAnhrs qNPzSuq bvZjqMfy aaEGCqc XrvE KFXnmA mEnN uGHJt WypGwSiJDmP qBDWYau SzbxbSRUb CMwhBXiYA vQCTdtiB oVkRA XpHYTFE BYFpDTVlV zafiNugG YFyiIvYhhgyzj MihfVEqk OWlRLG YAUn sXWO jbKyczKOQfhXa qziTc xxMFCM WfVzT oPdKGSK Zz CzXeis.",
                            FoodBusinessAdministratorId = "08a1a626-7f8e-4b51-84fc-fc51b6302cca",
                            FoodBusinessCategory = 0,
                            FoodBusinessState = 0,
                            FourDigitCode = 0,
                            HasCarParking = false,
                            IsHandicapFriendly = false,
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NIF = 0,
                            NIS = 0,
                            NRC = 0,
                            Name = "BigMama",
                            NumberRatings = 0,
                            OffersTakeout = true,
                            Tags = "",
                            Website = "https://bigmama.com"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessClient", b =>
                {
                    b.Property<Guid>("FoodBusinessClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NIF")
                        .HasColumnType("int");

                    b.Property<int>("NIS")
                        .HasColumnType("int");

                    b.Property<int>("NRC")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodBusinessClientId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("FoodBusinessClients");

                    b.HasData(
                        new
                        {
                            FoodBusinessClientId = new Guid("e6f980ba-c381-4319-8b62-da017e116692"),
                            Archived = false,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "SONATRACH est la première entreprise du continent africain. Une société intégrée de l'Amont à l'Aval pétrolier et gazier et un Groupe internationale.",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = "a3dbd500-eab0-4233-86fd-7f1a4195f9a9",
                            NIF = 0,
                            NIS = 0,
                            NRC = 0,
                            Name = "Sonatrach",
                            Website = "https://sonatrach.com/"
                        },
                        new
                        {
                            FoodBusinessClientId = new Guid("1eb2b784-074d-4be4-afb7-9708331c0c63"),
                            Archived = false,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cevital is a family-run Group whose success and reputation are rooted in its history, its track record and its values.",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManagerId = "ba89dc5f-dfd1-4c87-9372-233c611cc756",
                            NIF = 0,
                            NIS = 0,
                            NRC = 0,
                            Name = "CEVITAL",
                            Website = "https://cevital.com/"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("ImageBytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLogo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodBusinessImages");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessUser", b =>
                {
                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationUserId", "FoodBusinessId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("FoodBusinessUsers");

                    b.HasData(
                        new
                        {
                            ApplicationUserId = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093")
                        },
                        new
                        {
                            ApplicationUserId = "d466ef00-61f1-4e77-801a-b516f0f12323",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093")
                        },
                        new
                        {
                            ApplicationUserId = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099")
                        },
                        new
                        {
                            ApplicationUserId = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022")
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Globalisation.Currency", b =>
                {
                    b.Property<Guid>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Names")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.LinkedDevice", b =>
                {
                    b.Property<Guid>("LinkedDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentifierDevice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkedDeviceId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("LinkedDevices");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Menu", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuState")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aaba"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(736),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "TajMhal Dishes Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aabb"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(1649),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "TajMhal Pizza Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aabc"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(1692),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "TajMhal Sandwiches Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aabd"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(1702),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "TajMhal Beverage  Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aabe"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(1712),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "TajMhal Dessert Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aa00"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(1722),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "Mcdonald Sandwiches Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aa01"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(1731),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "Mcdonald Beverage  Menu"
                        },
                        new
                        {
                            MenuId = new Guid("ccaecd78-ccbb-ee04-56ff-88887129aa02"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(1739),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "Mcdonald Dessert Menu"
                        },
                        new
                        {
                            MenuId = new Guid("e2289d77-b8e1-4476-bf66-e64f1a23d752"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(1746),
                            CreatedBy = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "BigMama Sandwiches Menu"
                        },
                        new
                        {
                            MenuId = new Guid("8f8c0139-1f90-40f3-ab88-5db2de45ff2e"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(1755),
                            CreatedBy = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "BigMama Beverage  Menu"
                        },
                        new
                        {
                            MenuId = new Guid("45051fc7-6983-44a5-9c12-66116c4533bf"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 654, DateTimeKind.Local).AddTicks(1763),
                            CreatedBy = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuState = 0,
                            Name = "BigMama Dessert Menu"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MoneyReceived")
                        .HasColumnType("real");

                    b.Property<float>("MoneyReturned")
                        .HasColumnType("real");

                    b.Property<DateTime>("OrderDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<float>("TotalToPay")
                        .HasColumnType("real");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.OrderDish", b =>
                {
                    b.Property<Guid>("OrderDishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PriceValue")
                        .HasColumnType("real");

                    b.HasKey("OrderDishId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDishes");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.OrderDishIngredient", b =>
                {
                    b.Property<Guid>("OrderDishIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderDishId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PriceValuePerStep")
                        .HasColumnType("real");

                    b.Property<int>("Steps")
                        .HasColumnType("int");

                    b.HasKey("OrderDishIngredientId");

                    b.HasIndex("OrderDishId");

                    b.ToTable("OrderDishIngredients");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("EnergeticValue")
                        .HasColumnType("real");

                    b.Property<Guid?>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("ProductId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Reservation", b =>
                {
                    b.Property<Guid>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDiners")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596300"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(7105),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 2,
                            ReservationDate = new DateTime(2021, 10, 15, 23, 43, 58, 649, DateTimeKind.Local).AddTicks(6191),
                            ReservationName = "ReservationName_00"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596301"),
                            CreatedAt = new DateTime(2021, 10, 15, 23, 43, 58, 652, DateTimeKind.Local).AddTicks(8222),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2021, 10, 16, 2, 43, 58, 652, DateTimeKind.Local).AddTicks(8154),
                            ReservationName = "ReservationName_01"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596302"),
                            CreatedAt = new DateTime(2021, 9, 30, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8301),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2021, 10, 16, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8247),
                            ReservationName = "ReservationName_02"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596303"),
                            CreatedAt = new DateTime(2021, 10, 30, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8448),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 2,
                            ReservationDate = new DateTime(2026, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8313),
                            ReservationName = "ReservationName_03"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596304"),
                            CreatedAt = new DateTime(2021, 10, 15, 19, 19, 58, 652, DateTimeKind.Local).AddTicks(8470),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 8,
                            ReservationDate = new DateTime(2036, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8460),
                            ReservationName = "ReservationName_04"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596305"),
                            CreatedAt = new DateTime(2021, 10, 14, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8502),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 13,
                            ReservationDate = new DateTime(2021, 10, 15, 15, 43, 58, 652, DateTimeKind.Local).AddTicks(8498),
                            ReservationName = "ReservationName_05"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596306"),
                            CreatedAt = new DateTime(2021, 9, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8515),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 7,
                            ReservationDate = new DateTime(2021, 10, 3, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8513),
                            ReservationName = "ReservationName_06"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596307"),
                            CreatedAt = new DateTime(2021, 8, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8530),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 9,
                            ReservationDate = new DateTime(2021, 8, 23, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8528),
                            ReservationName = "ReservationName_07"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596308"),
                            CreatedAt = new DateTime(2022, 2, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8541),
                            CreatedBy = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2022, 3, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8538),
                            ReservationName = "ReservationName_08"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596309"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8554),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2021, 10, 15, 22, 43, 58, 652, DateTimeKind.Local).AddTicks(8550),
                            ReservationName = "ReservationName_09"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596310"),
                            CreatedAt = new DateTime(2021, 10, 15, 23, 43, 58, 652, DateTimeKind.Local).AddTicks(8567),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 6,
                            ReservationDate = new DateTime(2021, 10, 16, 1, 43, 58, 652, DateTimeKind.Local).AddTicks(8564),
                            ReservationName = "ReservationName_10"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596311"),
                            CreatedAt = new DateTime(2021, 10, 1, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8579),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 10, 17, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8577),
                            ReservationName = "ReservationName_11"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596312"),
                            CreatedAt = new DateTime(2021, 12, 5, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8591),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2025, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8588),
                            ReservationName = "ReservationName_12"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596313"),
                            CreatedAt = new DateTime(2021, 10, 15, 19, 19, 58, 652, DateTimeKind.Local).AddTicks(8605),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 9,
                            ReservationDate = new DateTime(2036, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8601),
                            ReservationName = "ReservationName_13"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596314"),
                            CreatedAt = new DateTime(2021, 10, 13, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8618),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 14,
                            ReservationDate = new DateTime(2021, 10, 15, 14, 43, 58, 652, DateTimeKind.Local).AddTicks(8615),
                            ReservationName = "ReservationName_14"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596315"),
                            CreatedAt = new DateTime(2021, 9, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8630),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 8,
                            ReservationDate = new DateTime(2021, 10, 2, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8628),
                            ReservationName = "ReservationName_15"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596316"),
                            CreatedAt = new DateTime(2021, 7, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8644),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 10,
                            ReservationDate = new DateTime(2021, 8, 26, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8641),
                            ReservationName = "ReservationName_16"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596317"),
                            CreatedAt = new DateTime(2022, 1, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8656),
                            CreatedBy = "6b14cd00-59f0-4422-bfce-07c080829987",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2022, 2, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8653),
                            ReservationName = "ReservationName_17"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596327"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8671),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2021, 10, 15, 21, 43, 58, 652, DateTimeKind.Local).AddTicks(8668),
                            ReservationName = "ReservationName_27"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596328"),
                            CreatedAt = new DateTime(2021, 10, 15, 22, 43, 58, 652, DateTimeKind.Local).AddTicks(8683),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 6,
                            ReservationDate = new DateTime(2021, 10, 16, 0, 43, 58, 652, DateTimeKind.Local).AddTicks(8680),
                            ReservationName = "ReservationName_28"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596329"),
                            CreatedAt = new DateTime(2021, 10, 1, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8694),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 10, 16, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8692),
                            ReservationName = "ReservationName_29"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596330"),
                            CreatedAt = new DateTime(2021, 12, 9, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8708),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 3,
                            ReservationDate = new DateTime(2024, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8705),
                            ReservationName = "ReservationName_30"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596331"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 58, 58, 652, DateTimeKind.Local).AddTicks(8721),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 9,
                            ReservationDate = new DateTime(2034, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8718),
                            ReservationName = "ReservationName_31"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596332"),
                            CreatedAt = new DateTime(2021, 10, 12, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8734),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 14,
                            ReservationDate = new DateTime(2021, 10, 15, 15, 43, 58, 652, DateTimeKind.Local).AddTicks(8731),
                            ReservationName = "ReservationName_32"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596333"),
                            CreatedAt = new DateTime(2021, 9, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8745),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 8,
                            ReservationDate = new DateTime(2021, 10, 5, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8743),
                            ReservationName = "ReservationName_33"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596334"),
                            CreatedAt = new DateTime(2021, 8, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8759),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 10,
                            ReservationDate = new DateTime(2021, 9, 2, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8756),
                            ReservationName = "ReservationName_34"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596335"),
                            CreatedAt = new DateTime(2021, 12, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8774),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2022, 1, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8770),
                            ReservationName = "ReservationName_35"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596336"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8788),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 10, 15, 19, 43, 58, 652, DateTimeKind.Local).AddTicks(8785),
                            ReservationName = "ReservationName_36"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596337"),
                            CreatedAt = new DateTime(2021, 10, 15, 20, 43, 58, 652, DateTimeKind.Local).AddTicks(8799),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 5,
                            ReservationDate = new DateTime(2021, 10, 15, 22, 43, 58, 652, DateTimeKind.Local).AddTicks(8797),
                            ReservationName = "ReservationName_37"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596338"),
                            CreatedAt = new DateTime(2021, 10, 1, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8811),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 6,
                            ReservationDate = new DateTime(2021, 10, 20, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8808),
                            ReservationName = "ReservationName_38"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596339"),
                            CreatedAt = new DateTime(2021, 11, 4, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8825),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 7,
                            ReservationDate = new DateTime(2023, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8819),
                            ReservationName = "ReservationName_39"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596340"),
                            CreatedAt = new DateTime(2021, 10, 15, 19, 26, 58, 652, DateTimeKind.Local).AddTicks(8836),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 10,
                            ReservationDate = new DateTime(2031, 10, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8833),
                            ReservationName = "ReservationName_40"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596341"),
                            CreatedAt = new DateTime(2021, 10, 10, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(8850),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 17,
                            ReservationDate = new DateTime(2021, 10, 15, 6, 43, 58, 652, DateTimeKind.Local).AddTicks(8846),
                            ReservationName = "ReservationName_41"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596342"),
                            CreatedAt = new DateTime(2021, 9, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(9047),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 4,
                            ReservationDate = new DateTime(2021, 10, 8, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(9043),
                            ReservationName = "ReservationName_42"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596343"),
                            CreatedAt = new DateTime(2021, 11, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(9062),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 11,
                            ReservationDate = new DateTime(2021, 11, 27, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(9059),
                            ReservationName = "ReservationName_43"
                        },
                        new
                        {
                            ReservationId = new Guid("acbf657b-3398-7a73-8746-77b7cf596344"),
                            CreatedAt = new DateTime(2021, 12, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(9078),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfDiners = 2,
                            ReservationDate = new DateTime(2022, 1, 15, 18, 43, 58, 652, DateTimeKind.Local).AddTicks(9074),
                            ReservationName = "ReservationName_44"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Section", b =>
                {
                    b.Property<Guid>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionId");

                    b.HasIndex("MenuId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Specification", b =>
                {
                    b.Property<Guid>("SpecificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DishId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecificationId");

                    b.ToTable("Specifications");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.SubSection", b =>
                {
                    b.Property<Guid>("SubSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubSectionId");

                    b.HasIndex("SectionId");

                    b.ToTable("SubSections");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Table", b =>
                {
                    b.Property<Guid>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.Property<short>("TableState")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ZoneId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TableId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129ab00"),
                            Capacity = 4,
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(7347),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 4,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc0")
                        },
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129ab01"),
                            Capacity = 6,
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(8191),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 5,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc1")
                        },
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129ab02"),
                            Capacity = 4,
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(8231),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 10,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc2")
                        },
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129ab03"),
                            Capacity = 3,
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(8241),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 7,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc3")
                        },
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129aba2"),
                            Capacity = 5,
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(8251),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 7,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-33ff-bfaa-07c08082aba1")
                        },
                        new
                        {
                            TableId = new Guid("44aecd78-59bb-7504-bfff-07c07129aba3"),
                            Capacity = 3,
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(8261),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 3,
                            TableState = (short)0,
                            ZoneId = new Guid("32bccd11-59fd-33ff-bfaa-07c08082aba2")
                        },
                        new
                        {
                            TableId = new Guid("b006e2c5-5b8e-4584-8021-3cecd76c9ca6"),
                            Capacity = 6,
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(8269),
                            CreatedBy = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TableNumber = 8,
                            TableState = (short)0,
                            ZoneId = new Guid("f60d55e2-4e54-4896-9632-98d36d7680c3")
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Zone", b =>
                {
                    b.Property<Guid>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FoodBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZoneId");

                    b.HasIndex("FoodBusinessId");

                    b.ToTable("Zones");

                    b.HasData(
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc0"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(3350),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "TajMhal VIP Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc1"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(4216),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "TajMhal FAMILY Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc2"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(4260),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "TajMhal NORMAL Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-3304-bfaa-07c08082abc3"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(4271),
                            CreatedBy = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            FoodBusinessId = new Guid("3cbf3570-4444-4673-8746-29b7cf568093"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "TajMhal OUTDOOR Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-33ff-bfaa-07c08082aba1"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(4283),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "Mcdonald NORMAL Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("32bccd11-59fd-33ff-bfaa-07c08082aba2"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(4293),
                            CreatedBy = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            FoodBusinessId = new Guid("66bf3570-440d-4673-8746-29b7cf568099"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "Mcdonald OUTDOOR Zone"
                        },
                        new
                        {
                            ZoneId = new Guid("f60d55e2-4e54-4896-9632-98d36d7680c3"),
                            CreatedAt = new DateTime(2021, 10, 15, 18, 43, 58, 653, DateTimeKind.Local).AddTicks(4303),
                            CreatedBy = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            FoodBusinessId = new Guid("88bc7853-220f-9173-3246-afb7cf595022"),
                            LastModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ZoneTitle = "BigMama SHARED Zone"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Dish", b =>
                {
                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.Duration", "AveragePreparationTime", b1 =>
                        {
                            b1.Property<Guid>("DishId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("TimeUnits")
                                .HasColumnType("int");

                            b1.Property<float>("Value")
                                .HasColumnType("real");

                            b1.HasKey("DishId");

                            b1.ToTable("Dishes");

                            b1.WithOwner()
                                .HasForeignKey("DishId");
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.DishIngredient", b =>
                {
                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.Quantity", "AmountPerStep", b1 =>
                        {
                            b1.Property<Guid>("DishIngredientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<float>("Amount")
                                .HasColumnType("real");

                            b1.Property<int>("MeasurementUnits")
                                .HasColumnType("int");

                            b1.HasKey("DishIngredientId");

                            b1.ToTable("DishIngredients");

                            b1.WithOwner()
                                .HasForeignKey("DishIngredientId");
                        });

                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.Quantity", "Quantity", b1 =>
                        {
                            b1.Property<Guid>("DishIngredientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<float>("Amount")
                                .HasColumnType("real");

                            b1.Property<int>("MeasurementUnits")
                                .HasColumnType("int");

                            b1.HasKey("DishIngredientId");

                            b1.ToTable("DishIngredients");

                            b1.WithOwner()
                                .HasForeignKey("DishIngredientId");
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusiness", b =>
                {
                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("FoodBusinessId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StreetAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FoodBusinessId");

                            b1.ToTable("FoodBusinesses");

                            b1.WithOwner()
                                .HasForeignKey("FoodBusinessId");

                            b1.OwnsOne("SmartRestaurant.Domain.ValueObjects.GeoPosition", "GeoPosition", b2 =>
                                {
                                    b2.Property<Guid>("AddressFoodBusinessId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Latitude")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Longitude")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AddressFoodBusinessId");

                                    b2.ToTable("FoodBusinesses");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressFoodBusinessId");
                                });
                        });

                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("FoodBusinessId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("CountryCode")
                                .HasColumnType("int");

                            b1.Property<int>("Number")
                                .HasColumnType("int");

                            b1.HasKey("FoodBusinessId");

                            b1.ToTable("FoodBusinesses");

                            b1.WithOwner()
                                .HasForeignKey("FoodBusinessId");
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessClient", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("FoodBusinessClientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StreetAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FoodBusinessClientId");

                            b1.ToTable("FoodBusinessClients");

                            b1.WithOwner()
                                .HasForeignKey("FoodBusinessClientId");

                            b1.OwnsOne("SmartRestaurant.Domain.ValueObjects.GeoPosition", "GeoPosition", b2 =>
                                {
                                    b2.Property<Guid>("AddressFoodBusinessClientId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Latitude")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Longitude")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AddressFoodBusinessClientId");

                                    b2.ToTable("FoodBusinessClients");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressFoodBusinessClientId");
                                });
                        });

                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("FoodBusinessClientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("CountryCode")
                                .HasColumnType("int");

                            b1.Property<int>("Number")
                                .HasColumnType("int");

                            b1.HasKey("FoodBusinessClientId");

                            b1.ToTable("FoodBusinessClients");

                            b1.WithOwner()
                                .HasForeignKey("FoodBusinessClientId");
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.FoodBusinessUser", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Ingredient", b =>
                {
                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.EnergeticValue", "EnergeticValue", b1 =>
                        {
                            b1.Property<Guid>("IngredientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<float>("Amount")
                                .HasColumnType("real");

                            b1.Property<float>("Carbohydrates")
                                .HasColumnType("real");

                            b1.Property<float>("Energy")
                                .HasColumnType("real");

                            b1.Property<float>("Fat")
                                .HasColumnType("real");

                            b1.Property<int>("MeasurementUnit")
                                .HasColumnType("int");

                            b1.Property<float>("Protein")
                                .HasColumnType("real");

                            b1.HasKey("IngredientId");

                            b1.ToTable("Ingredients");

                            b1.WithOwner()
                                .HasForeignKey("IngredientId");
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.LinkedDevice", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.OrderDish", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Order", null)
                        .WithMany("OrderDishes")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.OrderDishIngredient", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.OrderDish", null)
                        .WithMany("OrderDishIngredients")
                        .HasForeignKey("OrderDishId");

                    b.OwnsOne("SmartRestaurant.Domain.ValueObjects.Quantity", "QuantityPerStep", b1 =>
                        {
                            b1.Property<Guid>("OrderDishIngredientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<float>("Amount")
                                .HasColumnType("real");

                            b1.Property<int>("MeasurementUnits")
                                .HasColumnType("int");

                            b1.HasKey("OrderDishIngredientId");

                            b1.ToTable("OrderDishIngredients");

                            b1.WithOwner()
                                .HasForeignKey("OrderDishIngredientId");
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Product", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Section", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.SubSection", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Entities.Zone", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Entities.FoodBusiness", "FoodBusiness")
                        .WithMany()
                        .HasForeignKey("FoodBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
