// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartRestaurant.Infrastructure.Identity.Persistence;

namespace SmartRestaurant.Infrastructure.Identity.Migrations
{
    [DbContext(typeof(IdentityContext))]
    [Migration("20230506215505_ChangeMaidRoleToHouseKeepingRole")]
    partial class ChangeMaidRoleToHouseKeepingRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Identity.Entities.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ConcurrencyStamp = "88f0dec2-5364-4881-4817-1f2a135a8641",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "emec7115-422c-487d-65b0-58cfa8e66a94",
                            Name = "SupportAgent",
                            NormalizedName = "SUPPORTAGENT"
                        },
                        new
                        {
                            Id = "3",
                            ConcurrencyStamp = "emrc7115-422c-487d-75b0-58cfa8e66a94",
                            Name = "SalesMan",
                            NormalizedName = "SALESMAN"
                        },
                        new
                        {
                            Id = "4",
                            ConcurrencyStamp = "emtc7115-422c-487d-85b0-58cfa8e66a94",
                            Name = "Photograph",
                            NormalizedName = "PHOTOGRAPH"
                        },
                        new
                        {
                            Id = "5",
                            ConcurrencyStamp = "5719c2b8-22fd-4eee-9c21-4bfbd2ce18d2",
                            Name = "FoodBusinessAdministrator",
                            NormalizedName = "FOODBUSINESSADMINISTRATOR"
                        },
                        new
                        {
                            Id = "6",
                            ConcurrencyStamp = "emcc7115-422c-487d-95b0-58cfa8e66a94",
                            Name = "FoodBusinessManager",
                            NormalizedName = "FOODBUSINESSMANAGER"
                        },
                        new
                        {
                            Id = "7",
                            ConcurrencyStamp = "emcb7115-422c-487d-95c0-58cfa8m66a94",
                            Name = "FoodBusinessOwner",
                            NormalizedName = "FOODBUSINESSOWNER"
                        },
                        new
                        {
                            Id = "9",
                            ConcurrencyStamp = "encc7115-422c-487d-95b0-58cfa8e66a95",
                            Name = "Cashier",
                            NormalizedName = "CASHIER"
                        },
                        new
                        {
                            Id = "8",
                            ConcurrencyStamp = "elcc7115-422c-487d-95b0-58cfa8e66a96",
                            Name = "Chef",
                            NormalizedName = "CHEF"
                        },
                        new
                        {
                            Id = "10",
                            ConcurrencyStamp = "ekcc7115-422c-487d-95b0-58cfa8e66a97",
                            Name = "Waiter",
                            NormalizedName = "WAITER"
                        },
                        new
                        {
                            Id = "11",
                            ConcurrencyStamp = "edcc7115-422c-487d-95b0-58cfa8e66a98",
                            Name = "Diner",
                            NormalizedName = "DINER"
                        },
                        new
                        {
                            Id = "12",
                            ConcurrencyStamp = "educ7115-422c-487d-25b0-58cfa8e66a98",
                            Name = "Anounymous",
                            NormalizedName = "ANOUNYMOUS"
                        },
                        new
                        {
                            Id = "13",
                            ConcurrencyStamp = "edpc7115-422c-487d-15b0-58cfa8e66a98",
                            Name = "Organization",
                            NormalizedName = "ORGANIZATION"
                        },
                        new
                        {
                            Id = "14",
                            ConcurrencyStamp = "edpc7115-422c-487d-15b0-58cfa8e66a98",
                            Name = "HotelManager",
                            NormalizedName = "HOTELMANAGER"
                        },
                        new
                        {
                            Id = "15",
                            ConcurrencyStamp = "edpc7115-422c-487d-15b0-58cfa8e66a98",
                            Name = "HotelReceptionist",
                            NormalizedName = "HOTELRECEPTIONIST"
                        },
                        new
                        {
                            Id = "16",
                            ConcurrencyStamp = "edpc7115-422c-487d-15b0-58cfa8e66a98",
                            Name = "HotelServiceAdmin",
                            NormalizedName = "HOTELSERVICEADMIN"
                        },
                        new
                        {
                            Id = "17",
                            ConcurrencyStamp = "edpc7115-422c-487d-15b0-58cfa8e66a98",
                            Name = "HotelClient",
                            NormalizedName = "HOTELCLIENT"
                        },
                        new
                        {
                            Id = "18",
                            ConcurrencyStamp = "270b4553-f9b8-48e0-b244-af2ce4bc5ca9",
                            Name = "HotelServiceTechnique",
                            NormalizedName = "HOTELSERVICETECHNIQUE"
                        },
                        new
                        {
                            Id = "19",
                            ConcurrencyStamp = "2622be83-085c-4339-ae68-ffa9d5cd2fa8",
                            Name = "HouseKeeping",
                            NormalizedName = "HOUSEKEEPING"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Identity.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShowPhoneNumberInOdoo")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "3cbf3570-0d44-4673-8746-29b7cf568093",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "16e6dede-9520-4095-bc3a-eea4a8297138",
                            Email = "SuperAdmin@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@SMARTRESTAURANT.IO",
                            NormalizedUserName = "SUPERADMIN@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEAzFpmzMtMiw0wHV6b0aUzFLF9Pw7B2u+DswRHttAU2nH22NHBsc/hSSvKUqmRWGZA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f7c1b6eb-5b55-466f-8ea6-a0132111d162",
                            TwoFactorEnabled = false,
                            UserName = "SuperAdmin@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "d466ef00-61f1-4e77-801a-b016f0f12323",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2e52f07f-e45b-4c1f-9cc0-6b5f8b379b61",
                            Email = "SupportAgent@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPPORTAGENT@SMARTRESTAURANT.IO",
                            NormalizedUserName = "SUPPORTAGENT@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "539a139c-421a-4d6d-a276-fe0b5be7b0b5",
                            TwoFactorEnabled = false,
                            UserName = "SupportAgent@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "d466ef00-61f1-4e77-801a-b516f0f12323",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ea1c0a09-3c5c-40e2-9b36-0d90a55e08ad",
                            Email = "Waiter@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "WAITER@SMARTRESTAURANT.IO",
                            NormalizedUserName = "WAITER@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9277899b-68cd-4e22-900a-e5a68f2e3e14",
                            TwoFactorEnabled = false,
                            UserName = "Waiter@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "3cbf3570-4444-4444-8746-29b7cf568093",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a7a065eb-0ad6-446f-8545-2b6e4d39c71a",
                            Email = "FoodAdmin@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "FOODADMIN@SMARTRESTAURANT.IO",
                            NormalizedUserName = "FOODADMIN@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e5014919-4cc4-42ae-9659-7799c4022c90",
                            TwoFactorEnabled = false,
                            UserName = "FoodAdmin@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "44bf3570-0d44-4673-8746-29b7cf568088",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9a22d0fb-f091-4a76-b0b7-1b33ab8f6deb",
                            Email = "McdonaldFoodAdmin@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MCDONALDFOODADMIN@SMARTRESTAURANT.IO",
                            NormalizedUserName = "MCDONALDFOODADMIN@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "438e3746-cfff-4944-979b-9fb4fe217129",
                            TwoFactorEnabled = false,
                            UserName = "McdonaldFoodAdmin@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "08a1a626-7f8e-4b51-84fc-fc51b6302cca",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2308e4a7-d4fb-4cbd-a31e-47546496abf6",
                            Email = "BigMamaFoodBusinessAdministrator@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "BIGMAMAFOODBUSINESSADMINISTRATOR@SMARTRESTAURANT.IO",
                            NormalizedUserName = "BIGMAMAFOODBUSINESSADMINISTRATOR@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "182c9064-d859-4708-9238-65042da1e6c5",
                            TwoFactorEnabled = false,
                            UserName = "BigMamaFoodBusinessAdministrator@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e9fe81f5-66fe-4d15-b831-9f197aa5e97f",
                            Email = "TajMhalFoodBusinessManager@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "TAJMHALFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            NormalizedUserName = "TAJMHALFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "13a11208-8d34-4dea-bf71-d5c2353fc3fd",
                            TwoFactorEnabled = false,
                            UserName = "TajMhalFoodBusinessManager@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8175f756-d001-4b91-96af-0fc4ea753bac",
                            Email = "McdonaldFoodBusinessManager@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MCDONALDFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            NormalizedUserName = "MCDONALDFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "77ecacba-89e5-4435-8849-caf07cb3eb92",
                            TwoFactorEnabled = false,
                            UserName = "McdonaldFoodBusinessManager@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ef2c3e8-9128-4335-931c-dc8f938081e8",
                            Email = "BigMamaSalimFoodBusinessManager@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "BIGMAMASALIMFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            NormalizedUserName = "BIGMAMASALIMFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEO+ouwzSOa+AsCNZrVEhO6Su9q/fX/Q9c9havEvhs5QtXWA6tRdfmqOlemUQphqDnA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a9fbfabd-3cb0-4d45-a858-19276fa6d7d7",
                            TwoFactorEnabled = false,
                            UserName = "BigMamaSalimFoodBusinessManager@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1809e9de-2cd6-4e09-a214-33b91682b244",
                            Email = "Diner_01@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DINER_01@SMARTRESTAURANT.IO",
                            NormalizedUserName = "DINER_01@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEJFZbbuBIpvoyXKwrceuNsU4cXZ18LLAl8g7s48Pye4EAEXwA2hswtnLMhMS9Q7Cjw ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ab7941d0-6c5f-4de4-baff-1662bf567cfd",
                            TwoFactorEnabled = false,
                            UserName = "Diner_01@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "6b14cd00-59f0-4422-bfce-07c080829987",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c5affadf-cd00-4163-984e-001f10569b21",
                            Email = "Diner_02@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DINER_02@SMARTRESTAURANT.IO",
                            NormalizedUserName = "DINER_02@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEJFZbbuBIpvoyXKwrceuNsU4cXZ18LLAl8g7s48Pye4EAEXwA2hswtnLMhMS9Q7Cjw ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "acbe6e78-98b4-4e37-989c-7749bdee32ac",
                            TwoFactorEnabled = false,
                            UserName = "Diner_02@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "a3dbd500-eab0-4233-86fd-7f1a4195f9a9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5ac0997a-c101-4dfa-b3ac-be21fa3b5c70",
                            Email = "manager@sonatrach.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MANAGER@SONATRACH.COM",
                            NormalizedUserName = "MANAGER@SONATRACH.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "07979016-b226-45c6-95b3-0809a6ced346",
                            TwoFactorEnabled = false,
                            UserName = "manager@sonatrach.com"
                        },
                        new
                        {
                            Id = "ba89dc5f-dfd1-4c87-9372-233c611cc756",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0c9fcf94-551e-4f08-b502-d49a95dba9d3",
                            Email = "manager@cevital.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MANAGER@CEVITAL.COM",
                            NormalizedUserName = "MANAGER@CEVITAL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a22c3be3-9ccf-4d58-ae01-ad430e9b20d6",
                            TwoFactorEnabled = false,
                            UserName = "manager@cevital.com"
                        },
                        new
                        {
                            Id = "6d215fd5-e7b4-4afd-aa6c-334a37d3874d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b3c916a1-a628-487e-890e-1e27115d0d62",
                            Email = "HotelManager@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOTELMANAGER@GMAIL.COM",
                            NormalizedUserName = "HOTELMANAGER@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "adf2b787-fe73-4049-9d04-7095c67d1e89",
                            TwoFactorEnabled = false,
                            UserName = "HotelManager@gmail.com"
                        },
                        new
                        {
                            Id = "83e72357-25b8-4e2a-8728-3e25365608e2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f332a1cb-ef2e-4e8d-ad71-6ed5c8476f29",
                            Email = "HotelReceptionist@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOTELRECEPTIONIST@GMAIL.COM",
                            NormalizedUserName = "HOTELRECEPTIONIST@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fd6bfa18-fa23-4674-8fd7-c7cd93187aa4",
                            TwoFactorEnabled = false,
                            UserName = "HotelReceptionist@gmail.com"
                        },
                        new
                        {
                            Id = "C4EAACBE-A5C5-47E8-8DED-508709D7A50F",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "806f24ba-aedd-4466-9693-e74dee437201",
                            Email = "HotelServiceAdmin@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOTELSERVICEADMIN@GMAIL.COM",
                            NormalizedUserName = "HOTELSERVICEADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f7b8f5d6-79f1-4099-9833-731c1b5c247e",
                            TwoFactorEnabled = false,
                            UserName = "HotelServiceAdmin@gmail.com"
                        },
                        new
                        {
                            Id = "FB8EC84D-3A8F-4FC6-B21E-7141B48A164D",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7fd78a48-d44f-4058-b2d8-a610c49245ea",
                            Email = "ClientHotel@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "CLIENTHOTEL@GMAIL.COM",
                            NormalizedUserName = "CLIENTHOTEL@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d2a14ac-9ddf-4b5d-9385-c34c0ff561b9",
                            TwoFactorEnabled = false,
                            UserName = "ClientHotel@gmail.com"
                        },
                        new
                        {
                            Id = "acd04fc6-99da-436f-a011-191b7e92aa23",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ddd23cc-ecf5-4d28-a791-dbceb004c655",
                            Email = "HotelServiceTechnique@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOTELSERVICETECHNIQUE@GMAIL.COM",
                            NormalizedUserName = "HOTELSERVICETECHNIQUE@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a2d0a577-900f-4b74-9cda-4deeec72591e",
                            TwoFactorEnabled = false,
                            UserName = "HotelServiceTechnique@gmail.com"
                        },
                        new
                        {
                            Id = "7d33ae49-68a8-4c10-bc57-b09da6f9f016",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "20f05300-1355-4ab3-809e-355213bb1042",
                            Email = "HotelMaid@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOTELMAID@GMAIL.COM",
                            NormalizedUserName = "HOTELMAID@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "42c06667-99c5-44e6-a2cf-d937ef53a7d9",
                            TwoFactorEnabled = false,
                            UserName = "HotelMaid@gmail.com"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Identity.Entities.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "3cbf3570-0d44-4673-8746-29b7cf568093",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "d466ef00-61f1-4e77-801a-b016f0f12323",
                            RoleId = "2"
                        },
                        new
                        {
                            UserId = "d466ef00-61f1-4e77-801a-b516f0f12323",
                            RoleId = "10"
                        },
                        new
                        {
                            UserId = "3cbf3570-4444-4444-8746-29b7cf568093",
                            RoleId = "5"
                        },
                        new
                        {
                            UserId = "44bf3570-0d44-4673-8746-29b7cf568088",
                            RoleId = "5"
                        },
                        new
                        {
                            UserId = "08a1a626-7f8e-4b51-84fc-fc51b6302cca",
                            RoleId = "5"
                        },
                        new
                        {
                            UserId = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            RoleId = "6"
                        },
                        new
                        {
                            UserId = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            RoleId = "6"
                        },
                        new
                        {
                            UserId = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            RoleId = "6"
                        },
                        new
                        {
                            UserId = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            RoleId = "11"
                        },
                        new
                        {
                            UserId = "6b14cd00-59f0-4422-bfce-07c080829987",
                            RoleId = "11"
                        },
                        new
                        {
                            UserId = "6d215fd5-e7b4-4afd-aa6c-334a37d3874d",
                            RoleId = "14"
                        },
                        new
                        {
                            UserId = "83e72357-25b8-4e2a-8728-3e25365608e2",
                            RoleId = "15"
                        },
                        new
                        {
                            UserId = "C4EAACBE-A5C5-47E8-8DED-508709D7A50F",
                            RoleId = "16"
                        },
                        new
                        {
                            UserId = "FB8EC84D-3A8F-4FC6-B21E-7141B48A164D",
                            RoleId = "17"
                        },
                        new
                        {
                            UserId = "acd04fc6-99da-436f-a011-191b7e92aa23",
                            RoleId = "18"
                        },
                        new
                        {
                            UserId = "7d33ae49-68a8-4c10-bc57-b09da6f9f016",
                            RoleId = "19"
                        },
                        new
                        {
                            UserId = "ba89dc5f-dfd1-4c87-9372-233c611cc756",
                            RoleId = "13"
                        },
                        new
                        {
                            UserId = "a3dbd500-eab0-4233-86fd-7f1a4195f9a9",
                            RoleId = "13"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Identity.Entities.ApplicationUserRole", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
