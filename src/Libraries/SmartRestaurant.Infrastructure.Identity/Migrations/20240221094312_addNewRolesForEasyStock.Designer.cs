// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartRestaurant.Infrastructure.Identity.Persistence;

namespace SmartRestaurant.Infrastructure.Identity.Migrations
{
    [DbContext(typeof(IdentityContext))]
    [Migration("20240221094312_addNewRolesForEasyStock")]
    partial class addNewRolesForEasyStock
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Identity.Entities.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ConcurrencyStamp = "88f0dec2-5364-4881-4817-1f2a135a8641",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = "20",
                            ConcurrencyStamp = "1933aad7-120c-414f-a575-5681df13732f",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = "24",
                            ConcurrencyStamp = "b9182488-5482-4051-af9d-5fea22182944",
                            Name = "GestionnaireVente",
                            NormalizedName = "GESTIONNAIREVENTE"
                        },
                        new
                        {
                            Id = "23",
                            ConcurrencyStamp = "6f3d452f-28a5-42be-b474-716985d97820",
                            Name = "GestionnaireStock",
                            NormalizedName = "GESTIONNAIRESTOCK"
                        },
                        new
                        {
                            Id = "25",
                            ConcurrencyStamp = "5050daa0-8870-4450-8004-23d11aa0cc4a",
                            Name = "GestionnaireAchat",
                            NormalizedName = "GESTIONNAIREACHAT"
                        },
                        new
                        {
                            Id = "22",
                            ConcurrencyStamp = "0c845a63-6573-488a-9c89-a50484707e88",
                            Name = "CaissierFacturier",
                            NormalizedName = "CAISSIERFACTURIER"
                        },
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "emec7115-422c-487d-65b0-58cfa8e66a94",
                            Name = "SupportAgent",
                            NormalizedName = "SUPPORTAGENT"
                        },
                        new
                        {
                            Id = "3",
                            ConcurrencyStamp = "emrc7115-422c-487d-75b0-58cfa8e66a94",
                            Name = "SalesMan",
                            NormalizedName = "SALESMAN"
                        },
                        new
                        {
                            Id = "4",
                            ConcurrencyStamp = "emtc7115-422c-487d-85b0-58cfa8e66a94",
                            Name = "Photograph",
                            NormalizedName = "PHOTOGRAPH"
                        },
                        new
                        {
                            Id = "5",
                            ConcurrencyStamp = "5719c2b8-22fd-4eee-9c21-4bfbd2ce18d2",
                            Name = "FoodBusinessAdministrator",
                            NormalizedName = "FOODBUSINESSADMINISTRATOR"
                        },
                        new
                        {
                            Id = "6",
                            ConcurrencyStamp = "emcc7115-422c-487d-95b0-58cfa8e66a94",
                            Name = "FoodBusinessManager",
                            NormalizedName = "FOODBUSINESSMANAGER"
                        },
                        new
                        {
                            Id = "7",
                            ConcurrencyStamp = "emcb7115-422c-487d-95c0-58cfa8m66a94",
                            Name = "FoodBusinessOwner",
                            NormalizedName = "FOODBUSINESSOWNER"
                        },
                        new
                        {
                            Id = "9",
                            ConcurrencyStamp = "encc7115-422c-487d-95b0-58cfa8e66a95",
                            Name = "Cashier",
                            NormalizedName = "CASHIER"
                        },
                        new
                        {
                            Id = "8",
                            ConcurrencyStamp = "elcc7115-422c-487d-95b0-58cfa8e66a96",
                            Name = "Chef",
                            NormalizedName = "CHEF"
                        },
                        new
                        {
                            Id = "10",
                            ConcurrencyStamp = "ekcc7115-422c-487d-95b0-58cfa8e66a97",
                            Name = "Waiter",
                            NormalizedName = "WAITER"
                        },
                        new
                        {
                            Id = "11",
                            ConcurrencyStamp = "edcc7115-422c-487d-95b0-58cfa8e66a98",
                            Name = "Diner",
                            NormalizedName = "DINER"
                        },
                        new
                        {
                            Id = "12",
                            ConcurrencyStamp = "educ7115-422c-487d-25b0-58cfa8e66a98",
                            Name = "Anounymous",
                            NormalizedName = "ANOUNYMOUS"
                        },
                        new
                        {
                            Id = "13",
                            ConcurrencyStamp = "edpc7115-422c-487d-15b0-58cfa8e66a98",
                            Name = "Organization",
                            NormalizedName = "ORGANIZATION"
                        },
                        new
                        {
                            Id = "14",
                            ConcurrencyStamp = "edpc7115-422c-487d-15b0-58cfa8e66a98",
                            Name = "HotelManager",
                            NormalizedName = "HOTELMANAGER"
                        },
                        new
                        {
                            Id = "15",
                            ConcurrencyStamp = "edpc7115-422c-487d-15b0-58cfa8e66a98",
                            Name = "HotelReceptionist",
                            NormalizedName = "HOTELRECEPTIONIST"
                        },
                        new
                        {
                            Id = "16",
                            ConcurrencyStamp = "edpc7115-422c-487d-15b0-58cfa8e66a98",
                            Name = "HotelServiceAdmin",
                            NormalizedName = "HOTELSERVICEADMIN"
                        },
                        new
                        {
                            Id = "17",
                            ConcurrencyStamp = "edpc7115-422c-487d-15b0-58cfa8e66a98",
                            Name = "HotelClient",
                            NormalizedName = "HOTELCLIENT"
                        },
                        new
                        {
                            Id = "18",
                            ConcurrencyStamp = "270b4553-f9b8-48e0-b244-af2ce4bc5ca9",
                            Name = "HotelServiceTechnique",
                            NormalizedName = "HOTELSERVICETECHNIQUE"
                        },
                        new
                        {
                            Id = "19",
                            ConcurrencyStamp = "2622be83-085c-4339-ae68-ffa9d5cd2fa8",
                            Name = "HouseKeeping",
                            NormalizedName = "HOUSEKEEPING"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Identity.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShowPhoneNumberInOdoo")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "3cbf3570-0d44-4673-8746-29b7cf568093",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "96a1d3e9-9af5-43a7-ae11-c3e50f8bdb37",
                            Email = "SuperAdmin@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@SMARTRESTAURANT.IO",
                            NormalizedUserName = "SUPERADMIN@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEAzFpmzMtMiw0wHV6b0aUzFLF9Pw7B2u+DswRHttAU2nH22NHBsc/hSSvKUqmRWGZA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3f210f69-7bee-49c6-9142-2754db20fead",
                            TwoFactorEnabled = false,
                            UserName = "SuperAdmin@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "d466ef00-61f1-4e77-801a-b016f0f12323",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e0a57961-cd23-49de-bbcc-3f5fdfb86c1e",
                            Email = "SupportAgent@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPPORTAGENT@SMARTRESTAURANT.IO",
                            NormalizedUserName = "SUPPORTAGENT@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "887866b3-f8ae-47d6-b8a4-9af4a4b80a0e",
                            TwoFactorEnabled = false,
                            UserName = "SupportAgent@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "d466ef00-61f1-4e77-801a-b516f0f12323",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0bbe5e30-9e88-4358-bfb0-b8d41e67d2c2",
                            Email = "Waiter@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "WAITER@SMARTRESTAURANT.IO",
                            NormalizedUserName = "WAITER@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2140aa67-f060-4e0a-87a6-e8d12a82b1d9",
                            TwoFactorEnabled = false,
                            UserName = "Waiter@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "3cbf3570-4444-4444-8746-29b7cf568093",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b6cccc99-49a5-4a89-b34e-4bad58715a72",
                            Email = "FoodAdmin@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "FOODADMIN@SMARTRESTAURANT.IO",
                            NormalizedUserName = "FOODADMIN@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "25d84161-a3d8-42e7-9f5e-1ceffadd4433",
                            TwoFactorEnabled = false,
                            UserName = "FoodAdmin@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "44bf3570-0d44-4673-8746-29b7cf568088",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a4bb7127-32af-4bab-83c5-6a961c89e83f",
                            Email = "McdonaldFoodAdmin@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MCDONALDFOODADMIN@SMARTRESTAURANT.IO",
                            NormalizedUserName = "MCDONALDFOODADMIN@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "46bf5976-4310-4b73-869f-eabfd8fa840f",
                            TwoFactorEnabled = false,
                            UserName = "McdonaldFoodAdmin@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "08a1a626-7f8e-4b51-84fc-fc51b6302cca",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "229a87d5-ebf2-4721-94b1-7cf62814b7a2",
                            Email = "BigMamaFoodBusinessAdministrator@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "BIGMAMAFOODBUSINESSADMINISTRATOR@SMARTRESTAURANT.IO",
                            NormalizedUserName = "BIGMAMAFOODBUSINESSADMINISTRATOR@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c296f1f0-2b6f-46a4-a46f-bd82cf8599e2",
                            TwoFactorEnabled = false,
                            UserName = "BigMamaFoodBusinessAdministrator@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9d751091-213a-49fc-9ba0-fdc09266be95",
                            Email = "TajMhalFoodBusinessManager@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "TAJMHALFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            NormalizedUserName = "TAJMHALFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2499a770-46ac-4003-aea4-e6ebaf5ead21",
                            TwoFactorEnabled = false,
                            UserName = "TajMhalFoodBusinessManager@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3057abb3-f6b9-423f-bed5-26685af472c2",
                            Email = "McdonaldFoodBusinessManager@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MCDONALDFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            NormalizedUserName = "MCDONALDFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8b5bc13b-44f2-48f4-b6a0-d2d182b7bbd6",
                            TwoFactorEnabled = false,
                            UserName = "McdonaldFoodBusinessManager@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "78435d35-6718-4f06-a116-4ac8f76e5d05",
                            Email = "BigMamaSalimFoodBusinessManager@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "BIGMAMASALIMFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            NormalizedUserName = "BIGMAMASALIMFOODBUSINESSMANAGER@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEO+ouwzSOa+AsCNZrVEhO6Su9q/fX/Q9c9havEvhs5QtXWA6tRdfmqOlemUQphqDnA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4f70b1c6-e58c-498c-9f33-3702e62899da",
                            TwoFactorEnabled = false,
                            UserName = "BigMamaSalimFoodBusinessManager@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d9e8aba7-7410-4cc1-a77b-d316540db851",
                            Email = "Diner_01@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DINER_01@SMARTRESTAURANT.IO",
                            NormalizedUserName = "DINER_01@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEJFZbbuBIpvoyXKwrceuNsU4cXZ18LLAl8g7s48Pye4EAEXwA2hswtnLMhMS9Q7Cjw ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7654c567-89c9-42b4-9521-45a7abffef75",
                            TwoFactorEnabled = false,
                            UserName = "Diner_01@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "6b14cd00-59f0-4422-bfce-07c080829987",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "60d3697b-b12e-419b-a480-8fe24a014953",
                            Email = "Diner_02@SmartRestaurant.io",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DINER_02@SMARTRESTAURANT.IO",
                            NormalizedUserName = "DINER_02@SMARTRESTAURANT.IO",
                            PasswordHash = "AQAAAAEAACcQAAAAEJFZbbuBIpvoyXKwrceuNsU4cXZ18LLAl8g7s48Pye4EAEXwA2hswtnLMhMS9Q7Cjw ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "51130ab0-5a4a-4d9a-ba85-ccb411592482",
                            TwoFactorEnabled = false,
                            UserName = "Diner_02@SmartRestaurant.io"
                        },
                        new
                        {
                            Id = "a3dbd500-eab0-4233-86fd-7f1a4195f9a9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "70d64003-60b9-4fd5-a6fb-7e31601e5761",
                            Email = "manager@sonatrach.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MANAGER@SONATRACH.COM",
                            NormalizedUserName = "MANAGER@SONATRACH.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "51a1c08b-d5b7-4984-ad09-7b64bbd4718b",
                            TwoFactorEnabled = false,
                            UserName = "manager@sonatrach.com"
                        },
                        new
                        {
                            Id = "ba89dc5f-dfd1-4c87-9372-233c611cc756",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8c07904b-a948-4736-8bbe-a1f0e0febff8",
                            Email = "manager@cevital.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MANAGER@CEVITAL.COM",
                            NormalizedUserName = "MANAGER@CEVITAL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE2YnCbwcY+aBvcZq2dTXfaPqZnSgNoXFKtyI0hIdVJI3tTBvln+3oc+p1Ijr/ckMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a1290764-c3c0-4005-ae12-60d21f886a40",
                            TwoFactorEnabled = false,
                            UserName = "manager@cevital.com"
                        },
                        new
                        {
                            Id = "6d215fd5-e7b4-4afd-aa6c-334a37d3874d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9e1ad7da-73e8-4f8a-892b-ff5e27ea3c60",
                            Email = "HotelManager@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOTELMANAGER@GMAIL.COM",
                            NormalizedUserName = "HOTELMANAGER@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "df9d8e56-ec83-482a-8ebf-5b8f3be63203",
                            TwoFactorEnabled = false,
                            UserName = "HotelManager@gmail.com"
                        },
                        new
                        {
                            Id = "83e72357-25b8-4e2a-8728-3e25365608e2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "66045c86-5134-49d1-847f-e9e0b5126a38",
                            Email = "HotelReceptionist@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOTELRECEPTIONIST@GMAIL.COM",
                            NormalizedUserName = "HOTELRECEPTIONIST@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "413d3184-f67b-4e0f-b1be-b5c3f588419d",
                            TwoFactorEnabled = false,
                            UserName = "HotelReceptionist@gmail.com"
                        },
                        new
                        {
                            Id = "C4EAACBE-A5C5-47E8-8DED-508709D7A50F",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c0343ac5-10f5-46f7-b211-484aac4824da",
                            Email = "HotelServiceAdmin@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOTELSERVICEADMIN@GMAIL.COM",
                            NormalizedUserName = "HOTELSERVICEADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ffe1cc15-dcd2-4976-ba37-c131cf05297b",
                            TwoFactorEnabled = false,
                            UserName = "HotelServiceAdmin@gmail.com"
                        },
                        new
                        {
                            Id = "FB8EC84D-3A8F-4FC6-B21E-7141B48A164D",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "679f0801-84b5-4243-a74d-3351d19ac957",
                            Email = "ClientHotel@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "CLIENTHOTEL@GMAIL.COM",
                            NormalizedUserName = "CLIENTHOTEL@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "101627e6-45b7-48e6-830b-72c8a05a1661",
                            TwoFactorEnabled = false,
                            UserName = "ClientHotel@gmail.com"
                        },
                        new
                        {
                            Id = "acd04fc6-99da-436f-a011-191b7e92aa23",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "076c455d-140f-47ed-887f-163bd51fa893",
                            Email = "HotelServiceTechnique@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOTELSERVICETECHNIQUE@GMAIL.COM",
                            NormalizedUserName = "HOTELSERVICETECHNIQUE@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f2e054d5-69a5-44a1-be0d-d7856df0ce7a",
                            TwoFactorEnabled = false,
                            UserName = "HotelServiceTechnique@gmail.com"
                        },
                        new
                        {
                            Id = "7d33ae49-68a8-4c10-bc57-b09da6f9f016",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "23b30fa0-f9ee-497b-b988-7a9ad955738b",
                            Email = "HotelMaid@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            IsShowPhoneNumberInOdoo = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOTELMAID@GMAIL.COM",
                            NormalizedUserName = "HOTELMAID@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsuHVzJHLS9jP+mo+zCHk22BZphE5WRR+o2C6Ct4Ektv8zW9DXj1nogD2OdNBjWPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eafe581b-52ac-4ee5-a528-3cbd87e2dfd4",
                            TwoFactorEnabled = false,
                            UserName = "HotelMaid@gmail.com"
                        });
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Identity.Entities.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "3cbf3570-0d44-4673-8746-29b7cf568093",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "d466ef00-61f1-4e77-801a-b016f0f12323",
                            RoleId = "2"
                        },
                        new
                        {
                            UserId = "d466ef00-61f1-4e77-801a-b516f0f12323",
                            RoleId = "10"
                        },
                        new
                        {
                            UserId = "3cbf3570-4444-4444-8746-29b7cf568093",
                            RoleId = "5"
                        },
                        new
                        {
                            UserId = "44bf3570-0d44-4673-8746-29b7cf568088",
                            RoleId = "5"
                        },
                        new
                        {
                            UserId = "08a1a626-7f8e-4b51-84fc-fc51b6302cca",
                            RoleId = "5"
                        },
                        new
                        {
                            UserId = "a1997466-cedc-4850-b18d-0ac4f4102cff",
                            RoleId = "6"
                        },
                        new
                        {
                            UserId = "b2207466-ceda-4b50-b18d-0ac4f4102caa",
                            RoleId = "6"
                        },
                        new
                        {
                            UserId = "64fed988-6f68-49dc-ad54-0da50ec02319",
                            RoleId = "6"
                        },
                        new
                        {
                            UserId = "5a84cd00-59f0-4b22-bfce-07c080829118",
                            RoleId = "11"
                        },
                        new
                        {
                            UserId = "6b14cd00-59f0-4422-bfce-07c080829987",
                            RoleId = "11"
                        },
                        new
                        {
                            UserId = "6d215fd5-e7b4-4afd-aa6c-334a37d3874d",
                            RoleId = "14"
                        },
                        new
                        {
                            UserId = "83e72357-25b8-4e2a-8728-3e25365608e2",
                            RoleId = "15"
                        },
                        new
                        {
                            UserId = "C4EAACBE-A5C5-47E8-8DED-508709D7A50F",
                            RoleId = "16"
                        },
                        new
                        {
                            UserId = "FB8EC84D-3A8F-4FC6-B21E-7141B48A164D",
                            RoleId = "17"
                        },
                        new
                        {
                            UserId = "acd04fc6-99da-436f-a011-191b7e92aa23",
                            RoleId = "18"
                        },
                        new
                        {
                            UserId = "7d33ae49-68a8-4c10-bc57-b09da6f9f016",
                            RoleId = "19"
                        },
                        new
                        {
                            UserId = "ba89dc5f-dfd1-4c87-9372-233c611cc756",
                            RoleId = "13"
                        },
                        new
                        {
                            UserId = "a3dbd500-eab0-4233-86fd-7f1a4195f9a9",
                            RoleId = "13"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRestaurant.Domain.Identity.Entities.ApplicationUserRole", b =>
                {
                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartRestaurant.Domain.Identity.Entities.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
