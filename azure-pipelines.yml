stages:
- stage: Build_and_DB_Migration
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/release'))
  pool: 
    name: test-SmartRestaurant-agent
    workspace:
      clean: all
  variables:
    WEB_PROJECT_NAME: "SmartRestaurant.Client.Web"
    ARTIFACTS_OUTPUT_PATH: "/home/ubuntu/test-SmartRestaurant"
  jobs:
  - job: Restore_Nuget_Packages
    timeoutInMinutes: 5
    steps:
     - script: |
         cd "$WEB_PROJECT_NAME"
         dotnet clean
         dotnet restore
       displayName: Restore Common Packages
     - script: |
         cd "SmartRestaurant.Application"
         dotnet add package DataTables.AspNetCore.Mvc
       displayName: Add AspNetCore.Mvc Package
  - job: Build_the_Website
    dependsOn: Restore_Nuget_Packages
    condition: succeeded()
    timeoutInMinutes: 5
    steps:
     - checkout: none
     - script: |
          cd "$WEB_PROJECT_NAME"
          dotnet build --no-restore
       displayName: Build the Website
  - job: Database_Migration
    steps:
     - checkout: none
     - script: |
         cd "$WEB_PROJECT_NAME"
         dotnet ef database update --context:SmartRestaurantDbContext
         dotnet ef database update --context:SmartRestaurantIdentityDbContext
    dependsOn: Build_the_Website
    condition: succeeded()
- stage: Deployment
  dependsOn: Build_and_DB_Migration
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/release'))
  pool: 
    name: test-SmartRestaurant-agent
    workspace:
      clean: none
  variables:
    WEB_PROJECT_NAME: "SmartRestaurant.Client.Web"
    ARTIFACTS_OUTPUT_PATH: "/home/ubuntu/test-SmartRestaurant"
  jobs:
  - deployment: Deploy
    displayName: deploy Web App
    timeoutInMinutes: 5
    environment: 'SmartRestaurant-Test-Env'
    strategy:
      runOnce:
        deploy:
          steps:
           - checkout: none
           - script: |
               mkdir -p $ARTIFACTS_OUTPUT_PATH
               rm -rf $ARTIFACTS_OUTPUT_PATH/*
               cd "$WEB_PROJECT_NAME"
               dotnet publish --no-build -c Release --output=$ARTIFACTS_OUTPUT_PATH
               sudo systemctl restart SmartRestaurant.service
